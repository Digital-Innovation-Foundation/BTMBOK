<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-qhULJveAb9DHWFmO5HSk1w" name="uam_logical_activity,_Q4X6ENi7EdyPdoI9d5Dn-Q" guid="-qhULJveAb9DHWFmO5HSk1w" authors="DW Enstrom" changeDate="2015-02-12T14:25:48.125-0500" changeDescription="Change 'function' to 'activity' to synch to BPMN notation." version="2.0.2">
  <purpose>&lt;a id=&quot;XE_Logical_Activity&quot; name=&quot;XE_Logical_Activity&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    A Logical Activity provides value-added business benefit while producing and consuming Logical Entities. Logical Roles&#xD;
    may interact with these activities. At the Logical level, a &lt;em>high-level&lt;/em>&amp;nbsp;Logical Activity may&#xD;
    equate&amp;nbsp;to one or more&amp;nbsp;services with no notion of &quot;process&quot;, however, at lower levels they define the&#xD;
    individual steps in a logical process&amp;nbsp;that together define the process.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A set of Logical Activities,&amp;nbsp;will completely define the processes in the system.&amp;nbsp;They&amp;nbsp;cut across&#xD;
    organization boundaries, but external (to the business/system) interactions are defined as Logical Actors.&#xD;
    A&amp;nbsp;Logical Activity is a&amp;nbsp;specification of behavior in response to the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Interaction between the Logical Activity and Logical Roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Logical Events (internal or external);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Interaction between Logical Activities.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    What the logical environment directly and explicitly provides to its environment are &lt;em>logical services&lt;/em> and&#xD;
    should therefore encapsulate its resources and provide well-defined services to its environment and the interaction&#xD;
    between the Logical Role and the&amp;nbsp;Logical Activity will take place through the invocation of one or more of those&#xD;
    logical services.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Logical Activities are useful for anybody who wants to know the services and processes the business provides&#xD;
    (externally or internally) and how they interact with Logical Roles. Stakeholders, business-process designers, and&#xD;
    business designers use Logical Activities to describe logical processes (in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../UAM/workproducts/uam_perspective_logical_40FE04D0.html&quot; guid=&quot;_Py-hINT-EdyakOJbsHza1A&quot;>Logical&#xD;
    Perspective&lt;/a>, specifically in the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../UAM/workproducts/uam_logical_process_model_FEBA9C7C.html&quot; guid=&quot;_MMYawM6kEdymj4NXv8-FYA&quot;>Logical Process&#xD;
    Model&lt;/a>)&amp;nbsp;and to understand the effect of any proposed changes (for example, a merger or a first CRM&#xD;
    implementation) on the way the business works. Logical Activities are also used by system analysts and software&#xD;
    architects to understand the way a software system fits into the organization. Test managers use Logical Activities to&#xD;
    provide context for developing test scenarios for software systems.&amp;nbsp;&#xD;
&lt;/p></purpose>
  <briefOutline>&lt;p>&#xD;
    A template is provided for a Logical Activity, which contains its textual properties.&amp;nbsp;This document is used with a&#xD;
    requirements management tool, such as Rational RequisitePro, for specifying and marking the requirements within the&#xD;
    Logical Activity properties.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The diagrams of the Logical Activity can be developed in a visual modeling tool, such as Rational System Architect.&#xD;
&lt;/p></briefOutline>
  <representationOptions>&lt;p>&#xD;
    A Logical Call Activity captures the work (business services) performed by the system, which usually consume and&#xD;
    produce business entities. An activity is either atomic (i.e., it contains no further detail) or compound (i.e., it&#xD;
    contains further detail, it is a Subprocess). A Call Activity is a wrapper for globally defined functionality that is&#xD;
    reused within a process, within the system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>UML Representation&lt;/strong>:&amp;nbsp;«stereotype» LPL_Activity_Call&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Extends:&lt;/strong> «metaclass» ActivityNode and&amp;nbsp;«metaclass» StructuredActivityNode&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It&amp;nbsp;has the following &lt;strong>properties&lt;/strong>&amp;nbsp;&lt;a&#xD;
    href=&quot;./../../UAM/guidances/supportingmaterials/uam_references_229FFDF2.html&quot; guid=&quot;_nQFYAMb-EeK4P8KZ6MNYcg&quot;>(OMG&#xD;
    2013)&lt;/a>:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>description: string -&lt;/strong> A description of the business activities, task, and functions captured by&#xD;
        the activity.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>owner: string&lt;/strong> - Defines the owner of the business activity or process—the organizational element&#xD;
        that makes decisions about the process.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>crud: LPL_Entity [0..*]&lt;/strong> - References to the Entities that are Created, Read, Updated or Deleted by&#xD;
        this activity.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>id: string -&lt;/strong>&amp;nbsp;This attribute is used to uniquely identify model elements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>name: string&lt;/strong>&amp;nbsp;- A descriptive name for the Activity.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>isForCompensation: boolean = false -&lt;/strong>&amp;nbsp;A flag that identifies whether this Activity is intended&#xD;
        for the purposes of compensation. If false, then this Activity executes as a result of normal execution flow. If&#xD;
        true, this Activity is only activated when a Compensation Event is detected and initiated under Compensation Event&#xD;
        visibility scope.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>loopCharacteristics: LoopCharacteristics [0..1]&lt;/strong> -&amp;nbsp;An Activity MAY be performed once or MAY be&#xD;
        repeated. If repeated, the Activity MUST have loopCharacteristics that define the repetition criteria (if the&#xD;
        isExecutable attribute of the Process is set to true).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>resources: ResourceRole [0..*]&lt;/strong>&amp;nbsp;- Defines the resource that will perform or will be&#xD;
        responsible for the Activity. The resource, e.g., a performer, can be specified in the form of a specific&#xD;
        individual, a group, an organization role or position, or an organization.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>default: SequenceFlow [0..1]&lt;/strong> &amp;nbsp;- The Sequence Flow that will receive a token when none of the&#xD;
        conditionExpressions on other outgoing Sequence Flows evaluate to true. The default Sequence Flow should not have a&#xD;
        conditionExpression. Any such Expression SHALL be ignored.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>ioSpecification: Input OutputSpecification [0..1]&lt;/strong> &amp;nbsp;- The InputOutputSpecification defines the&#xD;
        inputs and outputs and the InputSets and OutputSets for the Activity.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>properties: Property [0..*]&lt;/strong> &amp;nbsp;- Modeler-defined properties MAY be added to an Activity. These&#xD;
        properties are contained within the Activity.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>boundaryEventRefs: BoundaryEvent [0..*]&lt;/strong> &amp;nbsp;- This references the Intermediate Events that are&#xD;
        attached to the boundary of the Activity.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>dataInputAssociations: DataIn-putAssociation [0..*]&lt;/strong> &amp;nbsp;- An optional reference to the&#xD;
        DataInputAssociations. A DataInputAssociation defines how the DataInput of the Activity’s InputOutputSpecification&#xD;
        will be populated.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>dataOutputAssociations: DataOutputAssociation [0..*]&lt;/strong> &amp;nbsp;- An optional reference to the&#xD;
        DataOutputAssociations.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>startQuantity: integer = 1&lt;/strong> &amp;nbsp;- The default value is 1. The value MUST NOT be less than 1. This&#xD;
        attribute defines the number of tokens that MUST arrive before the Activity can begin. Note that any value for the&#xD;
        attribute that is greater than 1 is an advanced type of modeling and should be used with caution.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>completionQuantity: integer = 1&lt;/strong> &amp;nbsp;- The default value is 1. The value MUST NOT be less than 1.&#xD;
        This attribute defines the number of tokens that MUST be generated from the Activity. This number of tokens will be&#xD;
        sent done any outgoing Sequence Flow (assuming any Sequence Flow conditions are satisfied). Note that any value for&#xD;
        the attribute that is greater than 1 is an advanced type of modeling and should be used with caution.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>calledElement: CallableElement [0..1]&lt;/strong>&amp;nbsp;- The element to be called, which will be either a&#xD;
        Process or a GlobalTask. Other CallableElements, such as Choreography, GlobalChoreographyTask, Conversation, and&#xD;
        GlobalCommunication MUST NOT be called by the Call Conversation element.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>state: string = None&lt;/strong> - The lifecycle of an Activity is described; see &lt;a&#xD;
        href=&quot;./../../UAM/guidances/supportingmaterials/uam_references_229FFDF2.html&quot; guid=&quot;_nQFYAMb-EeK4P8KZ6MNYcg&quot;>(OMG&#xD;
        2013)&lt;/a>.&lt;br />&#xD;
        .&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Constraints&#xD;
&lt;/h5>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        May have relationships (sequence flows) with other flow elements;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        See BPMN v2.0 &lt;a href=&quot;./../../UAM/guidances/supportingmaterials/uam_references_229FFDF2.html&quot;&#xD;
        guid=&quot;_nQFYAMb-EeK4P8KZ6MNYcg&quot;>(OMG 2013)&lt;/a>.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Note&#xD;
&lt;/h5>&#xD;
&lt;p class=&quot;BodyTable&quot; style=&quot;MARGIN: 6pt 0in&quot;>&#xD;
    This is only one type of activity modeling element. The complete list is summarize here: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../UAM/guidances/supportingmaterials/uam_lpl_simple_AB1449E6.html&quot; guid=&quot;_uOZlsEWJEeOfR_FtRm9PUg&quot;>Supporting&#xD;
    Material: LPL Summary&lt;/a>.&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
