<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:GuidanceDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-IbmdJ1l_Trj9tS99I7aa6Q" name="uam_pattern_distributed,_javDAIZeEeWxS8WE0a4vpg" guid="-IbmdJ1l_Trj9tS99I7aa6Q" changeDate="2015-11-09T10:24:51.202-0500" version="7.5.1">
  <mainDescription>&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Distributed Computing is a field of computer science that studies software system in which components located on&#xD;
    networked computers communicate and coordinate their actions by passing messages (&lt;a&#xD;
    href=&quot;http://en.wikipedia.org/wiki/Distributed_computing&quot; target=&quot;_blank&quot;>Wikipedia 2013&lt;/a>).&amp;nbsp;The network node&#xD;
    are not peers, but have some sort of centralized or distributed management and coordination system.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Problem Description&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Scalability is often needed to meet today's demanding computing needs. Scalability requirements include computing&#xD;
    resources, memory resources, and communications resources. An approach to providing easy scalability is to distribute&#xD;
    resources to where they are needed.&amp;nbsp; This pattern also addresses the need for concurrency,&amp;nbsp;availability, and&#xD;
    reliability.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Applicable Context&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The resources in a distributed computing environment are provided where they are needed. This may be done&amp;nbsp;on a&#xD;
    macro scale (i.e., computer services and applications are distributed) or on a micro scale (i.e., resources are&#xD;
    distributed &lt;em>within&lt;/em> the server).&amp;nbsp;This arrangement is very useful for providing scalable resources and&#xD;
    concurrency,&amp;nbsp;availability, and reliability.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;em>Distributed computing&lt;/em> also refers to the use of distributed systems to solve computational problems. A problem&#xD;
    is divided into many applications, each of which is solved by one or more computers, which communicate with each other&#xD;
    by message passing. The other variant is data distribution, where the same application is distributed to all systems&#xD;
    but they work on different data.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pattern Constraints&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This pattern is not applicable if the application or the information cannot be distributed on multiple&#xD;
    servers.&amp;nbsp;Since the information and application is distributed on servers, IT security becomes and important aspect&#xD;
    of the solution.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pattern Solution&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The terms &quot;distributed system&quot;, &quot;distributed programming&quot;, and &quot;distributed algorithm&quot; originally referred to computer&#xD;
    networks where individual computers were physically distributed within some geographical area.&amp;nbsp;These terms are now&#xD;
    used in a much wider sense, even referring to autonomous processes that run on the same physical computer and interact&#xD;
    with each other by message passing. There are many variations of a &lt;em>distributed system&lt;/em>, but they all have the&#xD;
    following&amp;nbsp;defining properties:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        There are several autonomous computational nodes, each of which has its own local memory.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The nodes communicate with each other by message passing.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A distributed system may have a common goal, such as solving a large computational problem through partitioning of the&#xD;
    problem, or partitioning of the data. Alternatively, each computer may have its own user with individual needs, and the&#xD;
    purpose of the distributed system is to coordinate the use of shared resources or provide communication services users.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Other typical properties of distributed systems are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The overall system provides fault tolerance.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The network topology, network latency, number of computers, etc. is not known in advance.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The system may consist of many kinds of computers and network links.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The system may change during the execution of a distributed program.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each node has only a limited, incomplete view of the system.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The following illustrates a possible distributed system. Other variation are possible, with the client-server, n-tier,&#xD;
    and peer-to-peer&amp;nbsp;patterns often sited as &lt;em>distributed systems&lt;/em>.&amp;nbsp;&lt;br />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Distributed Computing&quot; src=&quot;./resources/Arch-Pattern-distributed.png&quot; />&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This topic is further complicated by the possible architecture of the nodes, how their resources are structured and how&#xD;
    they communicate. See:&amp;nbsp;&lt;a href=&quot;https://en.wikipedia.org/wiki/Distributed_computing&quot;&#xD;
    target=&quot;_blank&quot;>https://en.wikipedia.org/wiki/Distributed_computing&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Related Patterns&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Other variations&amp;nbsp;and related patterns to the distributed computing pattern are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>&lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_p2p_144410EC.html&quot;&#xD;
        guid=&quot;_-7KHkIZdEeWxS8WE0a4vpg&quot;>Peer-to-peer Architectural Pattern&lt;/a>&amp;nbsp;&lt;/strong>- Peer-to-Peer is a type of&#xD;
        decentralized and distributed network architecture in which individual nodes in the network (called &quot;peers&quot;) act as&#xD;
        both suppliers and consumers of resources.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Peer-to-peer network topology&quot; src=&quot;./resources/Arch-Pattern-p2p.png&quot; />&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>&lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_n-tier_DCF39DB8.html&quot;&#xD;
        guid=&quot;__PzscIZeEeWxS8WE0a4vpg&quot;>N-Tier Pattern&lt;/a>&amp;nbsp;&lt;/strong>- multi-tier architecture (often referred to as&#xD;
        n-tier architecture) is a variation of client-server architecture where the presentation, application processing,&#xD;
        and data services are separated.&lt;a id=&quot;XE_Patterns__n-Tier&quot; name=&quot;XE_Patterns__n-Tier&quot;>&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;N-Tier&quot; src=&quot;./resources/Arch-Pattern-n-tier.png&quot; />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div>&#xD;
            &lt;strong>&lt;a class=&quot;elementLink&quot;&#xD;
            href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_client-server_2E388191.html&quot;&#xD;
            guid=&quot;_WNX0cLE0EeSgVPmVL1L5GQ&quot;>Client-Server Pattern&lt;/a>&lt;/strong>&amp;nbsp;-&amp;nbsp;The client-server pattern is a&#xD;
            distributed application structure in computing that partitions workloads between the providers of a resource or&#xD;
            service, called servers, and service requesters, called clients.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Client-server pattern&quot; src=&quot;./resources/Arch-Pattern-client-server.png&quot; />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:GuidanceDescription>
