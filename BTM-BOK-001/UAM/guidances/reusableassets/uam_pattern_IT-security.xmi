<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:GuidanceDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-G3LD13gOwtDJ8lNRgT_n2g" name="new_reusable_asset,_Z4fMMKmdEeSFIOC-Wm7nrA" guid="-G3LD13gOwtDJ8lNRgT_n2g" changeDate="2017-01-15T14:29:09.790-0500" version="2.1">
  <copyrightStatement href="uma://_eOrc8MCKEdyMpOiGFnM_WA#_BWzFIMEBEeSw-J1qr5azVQ"/>
  <mainDescription>&lt;a id=&quot;XE_Security__Architecture_Pattern&quot; name=&quot;XE_Security__Architecture_Pattern&quot;>&lt;/a>&lt;a id=&quot;XE_Patterns__IT_Security&quot;&#xD;
name=&quot;XE_Patterns__IT_Security&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    IT security architecture typically is a random patchwork of isolated and tactical solutions that solve specific&#xD;
    security problems. However, many security problems are neglected due to the complexity and diversity of these security&#xD;
    problems and solutions, resulting in the inability to understand the requirements and build overarching enterprise&#xD;
    security architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    The pattern describes an IT security “reference model” that unifies different aspects of IT security (&lt;a&#xD;
    href=&quot;http://en.wikipedia.org/wiki/Reference_model&quot; target=&quot;_blank&quot;>Wikipedia 2014&lt;/a>). It was formulated because no&#xD;
    one reference provides a clear comprehensive framework for IT security. The model provides clear divisions of&#xD;
    responsibility for the implementation and integration of security services that provide the appropriate level of&#xD;
    protection in accordance with defined policies. The model is applicable to a specific part of a company, across the&#xD;
    corporation or across a multinational corporation as required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    This pattern, or “IT Security Reference Model”, is based upon RBAC, Role-Based Access Controls (&lt;a&#xD;
    href=&quot;http://csrc.nist.gov/rbac/NIST-ITL-RBAC-bulletin.html&quot; target=&quot;_blank&quot;>Ferraiolo and Kuhn 1995&lt;/a>) (&lt;a&#xD;
    href=&quot;http://ivizlab.sfu.ca/arya/Papers/ACM/Role-Model%20Design%20and%20Imp%20with%20AOP.pdf&quot; target=&quot;_blank&quot;>Kendall&#xD;
    1999&lt;/a>) (&lt;a href=&quot;https://www.idi.ntnu.no/emner/tdt4237/2007/yoder.pdf&quot; target=&quot;_blank&quot;>Yoder and Barcalow 1997&lt;/a>).&#xD;
    The core objective is to provide access to services and information to those that need it, and mitigate access to those&#xD;
    that do not. A unique feature of this reference model is its dynamic aspect. The dynamic sessions that a user&#xD;
    establishes with services are included in the model, providing great flexibility and manageability of user permissions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    This architectural pattern is based upon the “defense in depth” concept, as illustrated in Figure 76, whereby users&#xD;
    must pass through multiple hurdles or checkpoints before gaining access to information (NSA/IA 2012). The level of&#xD;
    protection provided at each layer may be tailored to match the situation, sensitivities, policies, and risks requiring&#xD;
    mitigation. This IT Security Reference Model is an architectural pattern for the definition and integration of a set of&#xD;
    security services that permit multiple vendor implementations to work together, and to establish the level of&#xD;
    compliance of specific systems.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Defense-In-Depth Aspects&quot; src=&quot;./resources/Security-DiD.png&quot; />&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;1 – Defense in Depth&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This pattern was developed back in 2006 and described in &lt;em>A Reference Model for Enterprise Security&lt;/em> (&lt;a&#xD;
    href=&quot;http://www.scitepress.org/DigitalLibrary/Link.aspx?doi=10.5220/0002351903550364&quot; target=&quot;_blank&quot;>Enström, Walsh&#xD;
    and Hossendoust 2007&lt;/a>). The expanded description of this pattern provided in this chapter shows a generic approach&#xD;
    to security for the IT network and application environment in any business, large or small. It is described in detail&#xD;
    since IT security is, or should be, on the top of every enterprise’s list of things that it must do properly to ensure&#xD;
    their survival. No shortage of examples exists where lax IT security has resulted in great damage to a business, and&#xD;
    even its demise.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Problem Description&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Currently there is no cohesive logical framework describing the various aspects of IT security and how they relate to&#xD;
    each other to provide the required protections. Therefore, IT security requires a great depth of knowledge of software,&#xD;
    systems, and available security services in order to implement good security solutions. An architectural pattern is&#xD;
    required to provide a logical structure for the IT security architecture, thereby providing a better understanding of&#xD;
    how the various services work together to provide the required level of security. Clear divisions of responsibility for&#xD;
    the implementation and integration of security services are also needed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    An ad-hoc approach to the development and implementation of IT security does not result in good solutions that meet&#xD;
    requirements while at the same time being manageable. IT security, and solutions for it, is naturally getting more and&#xD;
    more involved as the risks and threats escalate. A cohesive approach to defining the security architecture is needed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A number of fundamental IT security aspects need to be addressed by any security pattern or model. This security&#xD;
    reference model covers these broad areas of concern; two runtime security services, plus the five major security&#xD;
    concerns:&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        User Identity, including their management;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Authentication;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Access Control (Authorization);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Integrity;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Confidentiality;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Availability;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Audit and logging.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These various security concepts are defined in detail in the solution to promote a good understanding of the pattern&#xD;
    (i.e., its reference model is described), and to coalesce on a common vocabulary.&lt;br />&#xD;
    &amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Applicable Context&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This pattern is best applied at an enterprise level, but is also effective at lower levels (i.e., Business Lines,&#xD;
    Business Domains and even Systems and Components). IT security solutions defined at the corporate level will address&#xD;
    the needs of the entire organization based upon corporate level policies and executive level decisions on the level of&#xD;
    acceptable risk. The complete picture is understood and appropriate measures and solutions implemented.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Solutions defined at lower levels are placed into the larger context, the enterprise context, to ensure that issues,&#xD;
    threats, and risks addressed at this lower level are compatible and complimentary to corporate level solutions. Some&#xD;
    extra work and analysis is needed to place a small system into this context, but otherwise there is no problem in&#xD;
    applying this pattern to smaller systems. In fact, corporate level solutions may simplify the IT security solutions&#xD;
    required at these lower levels, since some of the “defense-in-depth” is already put in place by enterprise level&#xD;
    solutions.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pattern Constraints&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A major constraint with this pattern (which is really a constraint imposed by the nature of IT security requirements,&#xD;
    threats, and risks) is that the solution must be completely defined. A complete analysis of the threats and risks is&#xD;
    required, with complete solutions defined to address them.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A characteristic of IT security is that half-measures are often worse than doing nothing. They are worse because many&#xD;
    dollars will be spent with little or no benefit. Therefore, all the aspects IT security have to be addressed within the&#xD;
    context of the complete system. A threat-risk assessment will indicate the areas needing attention, but aspects like&#xD;
    audit and monitoring are also implemented.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pattern Solution&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The IT Security Reference Model addresses the problem of defining a cohesive IT security architecture, with assurance&#xD;
    that all aspects are addressed. Described using UML, it defines a logical approach to enterprise security, but more&#xD;
    importantly provides a cohesive structure for the definition and implementation of security services. The complete&#xD;
    pattern is described, with a focus on &lt;em>subjects&lt;/em>, and &lt;em>protected objects&lt;/em> and how access is controlled.&#xD;
    Multiple layers of security are defined, building upon the “defense in depth” concept, augmented with &lt;em>domain&lt;/em>&#xD;
    and &lt;em>zone&lt;/em> concepts and associated protections. The dynamic use of &lt;em>roles&lt;/em> is described, a concept that&#xD;
    along with “user self-service” provides a practical approach for the management and use of &lt;em>roles&lt;/em> for access&#xD;
    control.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Each broad area of concern is described, followed by a summary overview of the pattern. Sequences diagrams are used to&#xD;
    illustrate the dynamic aspects of the reference model.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Protected Objects&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    At the heart of the security pattern is a Protected Object (Figure 2), which represents all of the sensitive items that&#xD;
    need protection. They need protection due to their inherent sensitivity (i.e., their classification label), or because&#xD;
    they are important components within the system (i.e., availability concerns).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Protected Objects must exist within a context defined by the Authority and the policies that the authority issues.&#xD;
    Without this context, the sensitivity of the Protected Objects, and therefore the protections required, would be&#xD;
    unclear. The model must provide protections for all objects; namely, Domains, Zones, the Services, Components, and Data&#xD;
    Items.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Protected Object model relationships&quot; src=&quot;./resources/Security-PO.png&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;2 – Protected Object Model&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The relationship between Security Policy and a Protected Object is a key aspect of the model. It defines how Domains,&#xD;
    Zones, Services, Components, and Data Items must behave to meet policy. It also provides the context under which&#xD;
    Domains and Zones (and sub-domain and sub-zones) are defined. A Domain is defined to ensure that rules defined by the&#xD;
    Authority are understood and enforced within the required scope (e.g., corporate intranet policy, or corporate extranet&#xD;
    policy). Zones and sub-zones are defined to ease the management and enforcement of a sub-set of the policy.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The model in Figure&amp;nbsp;2 may be described as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        An Authority issues one or more Security Policies;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security Policies are issued by one Authority;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Security Policy governs the usage of Protected Objects;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Usage of Protected Objects is governed by one Security Policy;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An Authority manages one or more Domains;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domains are managed by one Authority;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domains, Zones, Services, Components, and Data Items are all types of Protected Objects;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects may contain (compose) other protected objects;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domains contain one or more Zones ;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones are contained within one Domain;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones contain one or more Services;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Zones reference one or more Data Items;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Service is composed of one or more Components;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Service is contained within one Zone, but the service may also be found in more than one zone;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Component may be used within one service, but not exclusively;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data Items are contained within one Zone, but are accessible from multiple zones.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Domains and Zones, which are further defined below, are types of protected objects that aid in the separation of&#xD;
    security concerns and environments. The concept here is that through the provision of a layer of access control (at&#xD;
    either the Domain level or the Zone level) the security provided within the Domain or Zone is simplified. This is&#xD;
    equivalent to providing tight physical access control to a building, which simplifies the security implementation&#xD;
    within the building. The separation of a sensitive collection of Data Items and Services within a Zone, and providing&#xD;
    protection at the border of the Zone, simplifies the security protections needed within the Zone.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The security reference model also provides protections to other objects in addition to Domains and Zones: the Services&#xD;
    (i.e., Applications, software tools, etc.), Components (i.e., Lower level software and hardware components within the&#xD;
    Domain) and Data Items (i.e., sensitive information within the Domain and Zones that is transported produced and&#xD;
    consumed by the Services and Components).&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Domains&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    A Domain is a higher-level construct, concerned with security policies, security models, and security architecture,&#xD;
    including a set of resources and system entities that are authorized to access the resources. In other words, Domains&#xD;
    define “like” security environments, such as an organization’s intranet or its extranet. Policy is a key concept for&#xD;
    the definition of a Domain. Domains may be extended to allow for policy extensions. A Domain (e.g., A corporate&#xD;
    extranet) may also contain sub-domains (e.g., A portion of the extranet used by a particular business line) to permit&#xD;
    policy refinements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As noted, through the provision of a layer of access control at Domain boundaries, the security required within the&#xD;
    Domain is simplified.&lt;br />&#xD;
    No organization is an island unto itself; therefore, it needs to interact with many other Domains, such as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Suppliers;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Customers;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Partners;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Internet.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Since these other Domains are not under the control of the organization, or they are at different security levels or&#xD;
    policy, the border between the organization’s internal Domain and these other Domains must be carefully designed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A Domain is used for very coarse-grained access control based upon the policy issued by the Authority. Access control&#xD;
    between Domains (e.g., between corporations) is usually enforced at the network layer, through various mechanisms,&#xD;
    including Firewalls and other network layer protections. Application layer protections are also possible. A&#xD;
    demilitarized zone (or DMZ) implements these protections in a well-defined and standard manner. This reference model&#xD;
    includes this in its approach, through the definition of a Domain Policy Enforcement Point (Domain PEP) and Zone Policy&#xD;
    Enforcement Points (Zone PEP).&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Zones&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    A second important concept is that of a Zone. Zones are used to partition a Domain, making it easier to implement&#xD;
    security controls that enforce policies within and between them. Again, this is equivalent to providing strong physical&#xD;
    access to a room, which simplifies security practices within the room. Unlike a Domain, the concept for Zone is not&#xD;
    based upon an Authority and the policy that it defines, but upon enforcement of specific aspects or instances of&#xD;
    policies within the Domain (e.g., security services)—the securing of important or sensitive information or other&#xD;
    resources for example.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Zones are what one typically thinks of in the security context. They define a logical separation of systems and&#xD;
    services normally implemented at the network layer or above, through various mechanisms, providing coarse-grained&#xD;
    access control. Access control for specific policies is enforced by Zone Policy Enforcement Points. Service level&#xD;
    controls (i.e., User accounts) may also be used to control access to the services and information within Zones.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Zones may be sub-divided into smaller Zones. The objective is to group like-services and systems together—“like” in&#xD;
    this context, just as in the high-level Zones, means services, components, and data items at the same level of&#xD;
    sensitivity and policy. A Zone is also defined to control access from Zone to Zone. They define a logical separation&#xD;
    that is normally implemented at the network layer or above, through various mechanisms, providing the coarse-grained&#xD;
    access control required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    These concepts and classes within the pattern are shown in Figure 2, which illustrates the relationships between these&#xD;
    elements. Definitions for each are:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Authority&lt;/strong> – &amp;nbsp;person (e.g., corporate head of policy) who issues and manages the security policies&#xD;
    that applies to and specifies a Domain, and who “operates” and “manages” the Domain itself (i.e., they have complete&#xD;
    control over the Domain and its associated policy). An authority may manage multiple policy sets (e.g., extranet policy&#xD;
    and the intranet policy) and associated Domains (e.g., Extranet and Intranet).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Security Policy&lt;/strong> – the rules defining needed levels of information security to achieve the desired&#xD;
    confidentiality and integrity goals. A policy is a statement of information values, protection responsibilities, and&#xD;
    organization commitment for a system (e.g., The Corporate Extranet Policy).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Protected Object&lt;/strong> – an object within a Domain that, from a security perspective, needs protection. This&#xD;
    protection is required either because of the intrinsic sensitivity of the object (e.g., highly classified information)&#xD;
    or due to its importance within the infrastructure (e.g., a directory or firewall).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Security Label&lt;/strong> – the security classification of a Protected Object. It defines the mandatory access&#xD;
    control information, and the sensitivity of the labeled object, i.e., the classification plus other restrictions on the&#xD;
    handling of the information (e.g., Confidential – Management Eyes Only).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Domain&lt;/strong> – &amp;nbsp;an environment or context that is defined by security policies, security models, and&#xD;
    security architecture, including a set of resources and system entities that are authorized to access the resources. A&#xD;
    Domain is managed by a single &lt;em>authority&lt;/em>, and may contain one or more sub-domains. Domains are created when&#xD;
    security models or policies and architecture are significantly different from one Domain to another, or are&#xD;
    conflicting. Separate Domains provide clearer separation of concerns and ease policy enforcement and management. The&#xD;
    traits defining a given Domain typically evolve over time&amp;nbsp;&lt;a&#xD;
    href=&quot;./../../../UAM/guidances/supportingmaterials/uam_references_229FFDF2.html&quot; guid=&quot;_nQFYAMb-EeK4P8KZ6MNYcg&quot;>(ISO&#xD;
    2002)&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Zone&lt;/strong> – &amp;nbsp;a Zone is a subdivision of a Domain with a well-defined boundary that has a common level&#xD;
    of protection for all objects within its boundary. Zones may be logical or physical and may be defined at any layer&#xD;
    within the Domain architecture, from physical Zones (e.g., building or room), to application-level Zones (e.g.,&#xD;
    application-level access controls and protections). Typically, Zones are defined at the physical, network, and&#xD;
    application layers. A Zone can have multiple sub-zones, but can have only one super-zone. Sub-zones inherit their&#xD;
    parents’ properties (i.e., Policies that apply to the super-zone or Domain apply to the sub-zone). Zones cannot span&#xD;
    Domain (or Zone) boundaries.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Service&lt;/strong> – &amp;nbsp;a function that is well defined, self-contained, and does not depend on the context or&#xD;
    state of other services (e.g., Directory). It is a function packaged as a re-usable component within business&#xD;
    processes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component&lt;/strong> – &amp;nbsp;an assembly or part thereof, that is essential to the operation of some larger&#xD;
    assembly and is an immediate subdivision of the assembly to which it belongs (e.g., DBMS). In the software context,&#xD;
    this may in turn be composed of components. There are also hardware components (e.g., router, switch, PC, etc.).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Data Item&lt;/strong> – &amp;nbsp;a semantically meaningful unit of information exchanged between two parties to a&#xD;
    transaction (e.g., An &lt;em>Invoice&lt;/em>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It should be noted that security policy contains instructions regarding areas such as:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Generation and usage of passwords and other authentications mechanisms;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protection of data integrity;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Data privacy and confidentiality;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protection of privacy of users;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Definition of access rights to resources and other protected objects within the Domain;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Performance of periodic audits of services and activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Handling of incidents in which security policy was broken;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Establishment of level-of-service agreements regarding availability of services;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Purchase and deployment of security tools and services;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Physical access restrictions to resources;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reporting of violations of the policy;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        User accountability, legal and regulatory issues in which user compliance are required.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    User Identity&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In the IT security context, identity refers to the creation of an electronic equivalent to a person, a user account for&#xD;
    example. Within the system a representation of a user is defined that includes required characteristics or attributes;&#xD;
    in our model this is called a “Subject”. It includes characteristics that may be used to relate this electronic&#xD;
    representation of the person with the real person (i.e., name, employer, phone number, photo, fingerprint, etc.).&#xD;
    Security related metadata is also included, such as login ID and password for example, which in our model is&#xD;
    represented as a “credential”. A credential is used in establishing the association between the physical person and&#xD;
    their electronic representation as a Subject (that has credentials).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Within any IT environment a key security feature requiring attention is user identity, which is important in providing&#xD;
    or prohibiting access. User identity has two main aspects: One, establishing at login, with an appropriate level of&#xD;
    assurance, that the person logging in is associated with the proper Subject (i.e., the electronic representation of the&#xD;
    user), otherwise called authentication; Two, defining and managing the various credentials that a user may have within&#xD;
    the Domain (i.e., Identity Management).&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Roles Model&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Roles are categories that collect together users who share the same levels of security privilege. Two types of role are&#xD;
    defined, as shown in Figure 3. The &lt;em>new&lt;/em> classes are defined as follows:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Role&lt;/strong> – &amp;nbsp;object that represents a collection of permissions (e.g., IT roles) or a collection of&#xD;
    users (e.g., user roles), and that generally relates to a class of business functions. They collect together users who&#xD;
    share the same levels of security privilege; Subjects are granted Roles in order to obtain particular access&#xD;
    permissions. Roles are defined based upon the business functions performed (e.g., Financial Officer), or upon general&#xD;
    actions (e.g., Administering, Authoring, etc.). There are two types of Roles: Functional Roles and Contextual Roles.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Functional Role&lt;/strong> – role tied to a subject’s primary job function within the organization, but not&#xD;
    necessarily reported in the Human Resources (HR) system. Therefore, all organizational roles (i.e., a role in the&#xD;
    political and administrative structure of the organization) are Functional Roles, but not all Functional Roles are&#xD;
    organizational roles (e.g., the organizational role “Financial Analyst” and the Functional Role “Employee”).&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Contextual Role&lt;/strong> – role defining permissions in the context of a Zone, and a particular object within&#xD;
    the Zone. For a given business object, a Contextual Role can be granted directly to a user or associated with one of&#xD;
    its Functional Roles. The Contextual Roles currently defined are &lt;em>Administering&lt;/em>, &lt;em>Auditing&lt;/em>,&#xD;
    &lt;em>Authoring&lt;/em>, &lt;em>Collaborating&lt;/em>, and &lt;em>Monitoring&lt;/em>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Roles and Zones Model&quot; src=&quot;./resources/Security-Roles.png&quot; width=&quot;443&quot; height=&quot;258&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;3 – Roles and Zones Model&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to avoid confusion between Functional Roles and Contextual Roles the following conventions are adopted:&#xD;
    Functional and organizational roles will always be expressed as nouns (e.g., &lt;em>TigerTeam&lt;/em>); Contextual roles will&#xD;
    always be expressed as verbs (e.g., &lt;em>Collaborating&lt;/em>). This rule reflects the core differences between the role&#xD;
    types: Functional (and organizational) Roles really do relate to persons, places, or things; Contextual Roles are&#xD;
    (generic) actions performed by a Subject on an Object.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The model in Figure&amp;nbsp;3 may be described as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        There are two types of Role: Functional and Contextual;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Functional Roles compose zero or more Contextual Roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Contextual Roles are composed by one or more Functional Roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Zone defines the context for a Contextual Role;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Zone is a kind of Protected Object;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects may compose themselves;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Policy Enforcement Point mitigates access between a Role and a Protected Object.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Roles are used, as illustrated in the models within this chapter, as the fundamental method for controlling access to&#xD;
    Domains, Zones, Services, Components, and Data Items. Access decisions are made based upon a set of rules that use&#xD;
    attributes, roles, and other information about Subjects, Zones, and Protected Objects. The application of these rules&#xD;
    in a given context results in an access decision. In some cases (implementations), access decisions may be&#xD;
    pre-computed, resulting in a permission set for the Subject, which is used to control access. Dynamic decisions may&#xD;
    also be made, which is a much more flexible approach.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Audit and logging policies and procedures dictate the type of access events (i.e., authentication events) that must be&#xD;
    recorded in a security log for possible future analysis. These policies and procedures may vary from Domain to Domain,&#xD;
    and from Zone to Zone.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Static Model of Identity&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    A standard model is used for “identity”, where notions of a Subject (user), credentials, and Roles are utilized. The&#xD;
    relationships between these aspects of identity (and RBAC) are illustrated in Figure 4. This is the static view of&#xD;
    identity, that is, it describes a user’s identity as statically defined within the Domain (i.e., before the Subject&#xD;
    establishes sessions).&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Static Model of Identity&quot; src=&quot;./resources/Security-Subject.png&quot; width=&quot;435&quot; height=&quot;221&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;4 –&amp;nbsp;Static Model of Identity&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;em>new&lt;/em> classes in Figure&amp;nbsp;4 are:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Subject&lt;/strong> – &amp;nbsp;an entity that is represented within a Security Domain by one or more identities from&#xD;
    trusted Authorities (e.g., driver’s license and a health card). A Subject has associated security information such as&#xD;
    security clearances. Subjects may have many Roles, which in turn may have associated identity and credential&#xD;
    information (e.g., passwords). Note that a Subject does not necessarily equate to a human being, it may define a&#xD;
    service within the Domain.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Static Role Assignment and Delegation Policy&lt;/strong> – the policy that governs the allocation of Roles to&#xD;
    Subjects at the time of their enrollment within a Domain (e.g., all employees get HRInfoUpdate Role).&lt;br />&#xD;
    Subject Attributes – defines additional static characteristics of Subjects, such as the type of user (i.e., Full-time,&#xD;
    Term, Contractor, etc.), their affiliation (i.e., IBM, GoC, etc.), and nationality (i.e., CAN, USA, etc.).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The model in Figure 79 can be described as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Subjects (users) have clearances (Security Label);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects have other attributes (Subject Attributes), such as nationality, type (i.e., Full-time, term, etc.), and&#xD;
        organization (e.g., DoD);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects, dependent upon the “Static Role Assignment and Delegation Policy” rules, are assigned Role(s) when they&#xD;
        are enrolled within the Domain.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    It is important to note that Roles:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Define access rights within a single Domain;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Provide access rights within Zones inside a Domain; and&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Provide fine-grained access rights to Services and Data Items.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Dynamic Model of Identity&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Specific access rights are provided to a Subject through the granting of one or more Roles, when a user is defined&#xD;
    within the Domain, or dynamically as sessions are established with Services. Note that Roles define access rights&#xD;
    within a single Domain, Zones in the Domain, and provide fine-grained access rights to Services and Data items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In order to support the principle of “least privilege” (a Subject possesses just enough rights to do their job), Roles&#xD;
    and thus access rights may be assigned when Subjects establish, through secure mechanisms, Sessions with services,&#xD;
    normally within a Domain; however, sessions with services in external Domains are also supported. This dynamic aspect&#xD;
    of roles is shown in the model in Figure 5.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Dynamic Model of Identity&quot; src=&quot;./resources/Security-Subject-Dyn.png&quot; width=&quot;221&quot; height=&quot;254&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;5 –&amp;nbsp;Dynamic Identity Model&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A description of the &lt;em>new&lt;/em> classes in Figure 5:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Session&lt;/strong> – &amp;nbsp;a lasting connection, using a network protocol, between a user (or Service) and a&#xD;
    peer, typically a Service, usually involving the exchange of many packets of information (e.g., an HR application).&#xD;
    Session may be stateless or stateful.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Dynamic Role Assignment and Delegation Policy&lt;/strong> – the policy that governs the allocation of Roles to&#xD;
    Subjects when sessions are established with Services within a Domain (e.g., Users with the Analyst Role get the Update&#xD;
    Role when establishing a session with the Financial Analysis application).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Session Establishment Policy&lt;/strong> – the policy that governs the establishment of a session with Services&#xD;
    within a Domain. Subject attributes and credentials are used in determining if a session is allowed or not (e.g., Users&#xD;
    with the Analyst Role may establish a session with the Financial Analysts application).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The model in Figure 80 may be described as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A Subject may have zero or more Sessions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Session is associated with one Subject, and the Session Establishment Policy controls their creation;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Session may be associated with zero or more Roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Roles may be associated with zero or more Sessions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Subject may get Roles, based upon the Dynamic Role Assignment and Delegation Policy, when a Session is&#xD;
        established.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Authority and Policy Enforcement&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The Authority for a Domain establishes the required policies. The policies are enforced through a Policy Administration&#xD;
    Point, Policy Decision Point, and a Policy Enforcement Point (PEP) as described in Figure 6.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Authority and Policy Model&quot; src=&quot;./resources/Security-Authority_Policy.png&quot; width=&quot;442&quot; height=&quot;344&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;6 –&amp;nbsp;Authority and Policy Model&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Authority and Policy&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Figure 6 illustrates the generic model of authority, policy and policy enforcement. The &lt;em>new&lt;/em> classes in&#xD;
    Figure&amp;nbsp;6 are:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Policy Administration Point&lt;/strong> – an entity that manages and issues policies to a Policy Decision Point&#xD;
    (e.g., the policy administrator for the Domain). Also see &lt;em>Authority&lt;/em>.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Policy Decision Point (PDP)&lt;/strong> – an entity that evaluates an access request against one or more policies&#xD;
    to produce an access decision. Access decisions are based upon attributes of Subjects (including from their&#xD;
    Sessions/Roles) and attributes of the Protected Object (its security classification, etc.) plus the rules governing the&#xD;
    comparison and usage of these attributes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Policy Enforcement Point (PEP)&lt;/strong> – an entity that enforces access control for one or more resources&#xD;
    (Protected Objects). When attempting to access a Protected Object, a PEP sends an access request describing the&#xD;
    attempted access to a Policy Decision Point (PDP). The PDP returns an access decision that the PEP then&#xD;
    enforces.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The relationships shown in Figure 81 may be described as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        An Authority manages one or more Domains;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Domains are managed by one Authority;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An Authority issues one or more sets of Security Policy;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security Policy is composed of various parts;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security Policy is managed and issued by a Policy Administration Point (PAP);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An Authority has one or more PAPs;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A PAP issues policy to one Policy Decision Point (PDP);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A PDP has policy issued to it by one PAP;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A PDP makes access decisions for one or more Policy Enforcement Points (PEP);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A PEP has access decisions made by one PDP.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h5>&#xD;
    Policy Enforcement Points&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    All Protected Objects need protection to enforce policy, and therefore protection services, or Policy Enforcement&#xD;
    Points (PEP), are defined that provide this protection. They are in effect the layers of the (defense-in-depth)&#xD;
    security onion. Figure&amp;nbsp;7 shows the types of PEPs required and how they relate to other objects in the model. There&#xD;
    is a one-to-one correspondence between Protected Object types and the types of PEPs required and defined.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Simply knowing that a Subject has the clearances to access an Object is not sufficient for our purposes, the types of&#xD;
    permissions granted to the Subject are important. Also, permissions may be different depending upon the way in which&#xD;
    the information or service is accessed. A local user may have complete access to resources, but the same user accessing&#xD;
    services remotely (e.g., Telework) will have reduced capabilities—a dynamic model is required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Roles provide fine-grained access control, and may be defined to mitigate access to specific services, functions or&#xD;
    information. Other attributes such as the users “location” must also be used to determine access permissions. The rules&#xD;
    used to make access decisions based upon Roles and other attributes may get fairly complex, and they also need to be&#xD;
    consistent across the Domain (i.e., within each defined Zone). One way to ensure this consistency is though definition&#xD;
    of a single logical “authorization” service (PDP), which uses Subject attributes plus the Protected Objects’ attributes&#xD;
    to make access control decisions for PEPs.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp; &lt;img alt=&quot;Types of PEPs&quot; src=&quot;./resources/Security-PEP.png&quot; width=&quot;553&quot; height=&quot;391&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;7 –&amp;nbsp;Types of Policy Enforcement Points&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In summary, Roles are access modifiers that allow (or disallow) a particular kind of access. By associating a type of&#xD;
    permission to a Role, access to Services and Objects may be granted. Permissions granted through Roles are additive:&#xD;
    when new Roles (permissions) are added to the existing Roles (permissions), all Roles (permissions) are in play.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Permissions are evaluated in an optimistic fashion. If a Subject in the system is granted two Roles whose permissions&#xD;
    contradict each other, then the more permissive Role will take precedence.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;em>new&lt;/em> classes in Figure&amp;nbsp;7 are:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Domain PEP&lt;/strong> –&amp;nbsp;the interface point that provides secure access and interoperability between&#xD;
    different Domains (e.g., A DMZ with proxies, IP filtering, and firewalls). A Domain may have more than one PEP,&#xD;
    permitting different levels of access (based upon policy) and for non-functional reasons.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Zone PEP&lt;/strong> – &amp;nbsp;the interface point that provides secure access and interoperability to Protected&#xD;
    Objects within a Zone (e.g., intelligent proxy). A Zone may have more than one Zone PEP, for different levels of access&#xD;
    and for non-functional reasons.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Service PEP&lt;/strong> –&amp;nbsp;the interface point that provides secure access to a Service and its methods (e.g.,&#xD;
    a Proxy). A service may have more than one PEP, permitting different levels of access (based upon policy) and for&#xD;
    non-functional reasons.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Component PEP&lt;/strong> – the interface point that provides secure access to a Component and its methods (e.g.,&#xD;
    an authorization step when accessing the component). A component may have more than one PEP, permitting different&#xD;
    levels of access (based upon policy) and for non-functional reasons.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Data Item PEP&lt;/strong> – the interface point that provides secure access to a Data Item (e.g., an authorization&#xD;
    step when accessing the data). A Data Item may have more than one PEP, permitting different levels of access (based&#xD;
    upon policy) and for non-functional reasons.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Access Control&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Access restrictions ensure that only authorized Subjects are granted access to a Protected Object (i.e., a service,&#xD;
    function or information) within the Domain.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Many mechanisms are used to control access to Zones and Services. Generally access controls are implemented at the&#xD;
    physical, network and application layers. This security reference model is in general based upon RBAC. The base&#xD;
    objective is to provide access to services and information to those that need it, and mitigate access to those that do&#xD;
    not.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The main types of access restrictions that may be considered are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Physical Level&lt;/strong> – the prevention of people from physically accessing offices and systems to which&#xD;
        they do not have the privileges.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Network Level&lt;/strong> – the separation of systems, services, and information into Zones, each has a common&#xD;
        level of protection for all objects within its boundary. Protections are placed at the boundary of Zones that&#xD;
        control access to systems, services, and information; network layer protections or other types of protections may&#xD;
        be implemented (ISO 1989).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Application Level&lt;/strong> – applications are integrated with security services, such as the authentication&#xD;
        and authorization services to control access to Zone resources. Various standard approaches are available to&#xD;
        implementers, which are described in more detail below.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Physical level access controls are beyond the scope of this IT architectural pattern; however, the physical access&#xD;
    controls to buildings and offices are considered when defining the IT security model (i.e., deciding on security&#xD;
    approaches and technology given the level of physical access controls in place). Similar to this pattern for IT&#xD;
    architectures, physical access controls are also layered, which is also factored into IT security decisions.&lt;br />&#xD;
    Network level access controls are included in this model through the definition of Domain and Zone boundaries, which&#xD;
    enforce coarse-grained access controls. Access to services and information within a Domain or Zone from other Domains&#xD;
    or Zones is controlled through various protections at these boundaries (e.g., firewalls, IP address filtering, proxy&#xD;
    services, etc.) and protections provided at the service, component, and data item layers. The specifics of&#xD;
    implementation are beyond the scope of this architectural pattern. The &lt;em>Baseline Security Requirements for Network&#xD;
    Security Zones in the Government of Canada&lt;/em> (&lt;a href=&quot;https://www.cse-cst.gc.ca/en/node/268/html/15236&quot;&#xD;
    target=&quot;_blank&quot;>CSE-ITS 2007&lt;/a>) was used to help formulate the solution defined here.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Application level access controls are included through the definition of a single Authority (i.e., a Policy Decision&#xD;
    Point), Policy Enforcement Points, Authorization Services, and other mechanisms, which define fine-grained access&#xD;
    control. Access decisions are made based upon a set of rules that use attributes, roles, and other information about&#xD;
    Subjects, Zones, and Protected Objects (OASIS 2013). In some cases, access decisions may be pre-computed, resulting in&#xD;
    a permission set for the Subject, which is used to control access.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Basic Access Control&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The policies to enforce are manifested in some common aspects that all systems within the Domain must implement—they&#xD;
    are hard givens. This includes a standard set of labels and markings that are used to indicate the sensitivity of the&#xD;
    services or information (plus the access control policies that the labels help to enforce). The labels on Objects are&#xD;
    typically subdivided into the following parts within government circles:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Classification&lt;/strong> – a measure of the sensitivity of the information as determined by the harm that&#xD;
        would come from its disclosure. Example: Company Confidential or Top Secret.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Community of Interest (COI)&lt;/strong> – A caveat that restricts access of information or services on&#xD;
        need-to-know principles within an organization. Example: R&amp;amp;D or Management.&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>National Dissemination&lt;/strong>– A restriction on information dissemination between countries. Defines the&#xD;
        set of countries to which the information is releasable.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Classification is used for coarse-grained access control, and COIs, and National Dissemination is used for&#xD;
    fine-grained access control. All are mechanisms used to help enforce the access policies. Enterprises may also use this&#xD;
    classification labeling approach, with adaptations as required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Both users (Subjects) and Protected Objects are labeled: Objects labels indicate their sensitivity; user labels&#xD;
    indicate the clearances that they possess. In order to grant access the security properties of the identity accessing&#xD;
    an entity must minimally match the security properties placed upon that entity, as illustrated in Figure 8. The reality&#xD;
    of this policy decision, as one can appreciate, is more complex.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Basic Access Control&quot; src=&quot;./resources/Security-Basic-Access.png&quot; width=&quot;293&quot; height=&quot;112&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;8 –&amp;nbsp;Simple Concept of Access Control&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    All users within a Domain may be permitted to handle “Company Confidential” material, but at times the need-to-know&#xD;
    principle must still be enforced for very sensitive information, through the use of roles, COIs, and other attributes.&#xD;
    For example, some financial or management level information must be kept confidential, and would therefore have the&#xD;
    additional COI label “Management Eyes Only”.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Static Model of Access Control&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Subjects are assigned basic attributes when they are enrolled within the Domain. These include their security&#xD;
    clearances and other information contained in their credentials such as public and private keys. Roles may also be&#xD;
    given to users at this time, such as “Employee”. This static view of a Subject in the context of access control is&#xD;
    shown in the model in Figure 9.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The new classes in Figure 9 are:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Credential&lt;/strong> – &amp;nbsp;a token (e.g., biometric data) or a shared secret provided by a Subject that&#xD;
    imparts confidence in the claimed identity of the Subject within a Domain. A trustworthy authority issues credentials.&#xD;
    Subject credentials are created (i.e., an electronic representation within the Domain) as a result of a successful&#xD;
    authentication. Authentication is done through a set of one or more access tokens that will allow a Subject to connect&#xD;
    to a Domain or other Object (e.g., user ID/password combination, PKI certificate, Kerberos ticket, etc.).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Protected Object Attributes&lt;/strong> – defines additional characteristics of Protected Objects such as the&#xD;
    “Author” and “Owner”.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Permission&lt;/strong>– &amp;nbsp;the Authority-based right that allows a Subject to perform an action (such as&#xD;
    create, read, write, delete, or execute) on a Protected Object. Access is granted (provided mandatory access controls&#xD;
    are met) only by associating permissions with a Role. Permissions do not override mandatory access controls. The usage&#xD;
    of permissions is well covered in &lt;em>eXtensible Access Control Markup Language&lt;/em> (XACML)&amp;nbsp; &lt;a&#xD;
    href=&quot;./../../../UAM/guidances/supportingmaterials/uam_references_229FFDF2.html&quot; guid=&quot;_nQFYAMb-EeK4P8KZ6MNYcg&quot;>(OASIS&#xD;
    2013)&lt;/a>. .&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The rules governing access, enforced by the “Policy Decision Point” in Figure 84, may get quite complex—every effort&#xD;
    should be made to simplify models and the rule set. This in part is accomplished through the definition and&#xD;
    implementation of security Zones, but also the intelligent use of Roles, as in &lt;em>Model Driven Security: From UML&#xD;
    Models to Access Control Infrastructures&lt;/em> &lt;a&#xD;
    href=&quot;./../../../UAM/guidances/supportingmaterials/uam_references_229FFDF2.html&quot; guid=&quot;_nQFYAMb-EeK4P8KZ6MNYcg&quot;>(Basin,&#xD;
    Doser and Lodderstedt 2004)&lt;/a>. that defines in detail a very similar model for access control, minus the dynamic&#xD;
    aspect.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Static Model of Access Control&quot; src=&quot;./resources/Security-Access-Static.png&quot; width=&quot;526&quot;&#xD;
    height=&quot;261&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;9 –&amp;nbsp;Static Access Control Model&lt;/strong>&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The model in Figure 9 may be described as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Subjects have clearances (Security Label);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects have a Security Label;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects have attributes that are used in access control decisions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects have credentials (attributes such as PKI certificates, user ID, and password) which are used in access&#xD;
        control decisions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects have attributes that are used in access control decisions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects, dependent upon the “Static Role Assignment and Delegation Policy” rules, are assigned Role(s) within the&#xD;
        Domain;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Subject accesses a Protected Object through a Role;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Role provides access to zero or more Protected Objects;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects are associated with zero or more Roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Policy Enforcement Point controls access to a Protected Object based upon Subject, Role, and Protected Object&#xD;
        attributes;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Policy Decision Point makes access decisions on behalf of the Policy Enforcement Point (that enforces the&#xD;
        decision).&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    As noted, other attributes of Subjects (users), such as “location” (as discussed), “affiliation” (i.e., “employee” vs.&#xD;
    “contractor”), and “nationality”, are also used in making access control decisions.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Dynamic Model of Access Control&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Determining whether or not a user has access to a particular Protected Object based upon static identities and&#xD;
    credentials (i.e., at Domain login-time) does not address all requirements. Users, during the course of their day, need&#xD;
    to perform various activities with many different Zones and Services, and perhaps other Domains as well. This dynamic&#xD;
    aspect, and the concept of “least privilege”, requires a dynamic solution. The solution is to associate Roles with&#xD;
    Sessions, so that a Subject may be assigned more privileges when a Session with a particular service is established.&#xD;
    This demands proper controls over the establishment of Sessions. This dynamic model of access control is shown in&#xD;
    Figure 10.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Dynamic Model of Access Control&quot; src=&quot;./resources/Security-Access-Dyn.png&quot; width=&quot;562&quot; height=&quot;302&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 10&amp;nbsp;–&amp;nbsp;Dynamic Access Control Model&lt;/strong>&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
    Additional privileges are acquired as required through Role(s) assigned at Session establishment. Roles are generally&#xD;
    defined based upon business functions (or business-activity based), but Roles may also be contextual. Contextual Roles&#xD;
    are used to specify the actions that the associated Subject may take against a specific Protected Object. Examples of&#xD;
    possible contextual Roles include “Authoring”, “Reporting”, “Owning”, and “Collaborating”. Each of these roles has&#xD;
    associated capabilities (permissions).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Users will by default get a base set of Roles (when their identity and login are established, and they are enrolled&#xD;
    within the Domain), and more Roles may be granted when the user establishes application Sessions. Once granted, the&#xD;
    user has the access rights (permissions) associated with the Role.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The model in Figure&amp;nbsp;10 may be described as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Subjects have clearances (Security Label);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects have a Security Label;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects have attributes that are used in access control decisions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects have credentials (attributes such as PKI certificates, user ID, and password) which are used in access&#xD;
        control decisions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects have attributes that are used in access control decisions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects, dependent upon the “Static Role Assignment and Delegation Policy” rules, are assigned Role(s) within the&#xD;
        Domain;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Subjects may establish zero or more Sessions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Sessions are associated with one Subject;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Session may have zero or more associated Roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Roles may be associated with one or more Sessions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Subject may acquire Roles when a Session is established, based upon the “Dynamic Role Assignment and Delegation&#xD;
        Policy”;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Subject accesses a Protected Object through a Role;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Role provides access to zero or more Protected Objects;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Protected Objects are associated with zero or more Roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Policy Enforcement Point controls access to a Protected Object based upon Subject, Role, and Protected Object&#xD;
        attributes;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Policy Enforcement Points keep track of Sessions;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A Policy Decision Point makes access decisions on behalf of the Policy Enforcement Point (that enforces the&#xD;
        decision).&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h4>&#xD;
    Audit and Logging&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Auditing is the collection of data about the system, services, and other object activities that affect the security of&#xD;
    systems, services, and information. Systems and services within a Domain may utilize the audit service to capture audit&#xD;
    events. These events may be informational (e.g., User x logged into the system) or they may represent security&#xD;
    exceptions (e.g., Unauthorized user attempted to access resource y).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The audit and logging model provides a framework for the capture of security event information in logs. For performance&#xD;
    reasons, the security framework is circumspect in what events are logged. At the same time it must be recognized that&#xD;
    the requirements for audit and logging will vary depending upon the sensitivity (i.e., contents of the security label)&#xD;
    of the information being processed. As a result, the audit and logging model is a flexible one, allowing the&#xD;
    specification of audit assertions that are applied within the context of Subjects, Roles, Policy, and Protected&#xD;
    Objects.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As with the other aspects of this security pattern, both a static view and a dynamic view of audit are defined. The&#xD;
    static view is shown in Figure 11. The &lt;em>new&lt;/em> class in Figure&amp;nbsp;11 is:&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Security Audit&lt;/strong> – implements the logging of security events and information for and about the Protected&#xD;
    Objects and other sensitive information within a Domain. Audit information is always traceable to the Subject involved&#xD;
    in the activity (e.g., accessing information, updating of Roles or other permissions, Policy Decisions, and Enforcement&#xD;
    activity, etc.). Logging of events may be turned on and off as directed by security personnel.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Static Model of Audit&quot; src=&quot;./resources/Security-Audit-Static.png&quot; width=&quot;538&quot; height=&quot;301&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 11&amp;nbsp;–&amp;nbsp;Static Model of Audit&lt;/strong>&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Audit administrators can configure the set of events that are audited. These events are based upon commands (behaviors)&#xD;
    defined within PEPs, Services, Components, and Data Items and their utilization of the audit service. Audit events may&#xD;
    be turned on and off in a coarse or fine-grained manner; they can be controlled at the Zone, PEPs, Service, Component,&#xD;
    and Data Item levels.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Audit administrators (i.e., a Subject with this Role) can configure the set of events audited. These events are based&#xD;
    primarily upon commands (behaviors) defined within Domain systems and services or their utilization of the audit&#xD;
    service. Audit events may be turned on and off in a coarse or fine grained manner as required—that is, they can be&#xD;
    controlled within specific Zones or systems, and controlled within a specific Service. This makes administration&#xD;
    easier, and considerably reduces the amount of logging that needs to occur and that requires analysis.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Dynamic model of audit&quot; src=&quot;./resources/Security-Audit-Dyn.png&quot; width=&quot;540&quot; height=&quot;301&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 12&amp;nbsp;–&amp;nbsp;Dynamic Model of Audit&lt;/strong>&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The dynamic view of audit is shown in Figure 12. The only changes to this model of audit (compared to Figure 11) are&#xD;
    the addition of the “Dynamic Role Assignment and Delegation Policy”, and the removal of the “Static Role Assignment and&#xD;
    Delegation Policy”, for clarity purposes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Many details regarding audit are addressed at implementation, such as the required information captured in the logs,&#xD;
    how it is structured so that correlations and other analysis may be performed, along with what audit controls are&#xD;
    needed. Also, the audit process needs to support policy and verification of its application. Therefore, implementation&#xD;
    decisions, such as the need for firewalls, will require the implementation of audit capabilities. This model defines&#xD;
    the relationships required and the audit controls needed so that correlations and other analysis may be performed.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Authentication&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Authentication is the process of verification of a Subject’s identity, along with the provision of basic access to the&#xD;
    Domain with which the authentication is done (i.e., Static Subject attributes and Roles are provided). Authentication&#xD;
    can be viewed as a Domain PEP providing verification of the identity of the Subject, to some desired level of&#xD;
    assurance, and providing the Subject’s basic access permissions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Authentication is a necessity at the Domain level, but other levels may require authentication; namely, at the Zone,&#xD;
    Service, Component, and Data Item (PEP) levels. Mechanisms similar to Domain authentication may be used at the Zone,&#xD;
    Service, Component, and Data Item levels; however, practicalities (or performance) may restrict what can be done at&#xD;
    these other levels. Ideally once the Subject has authenticated to the Domain, the rest is transparent and not required.&#xD;
    Decisions will be required at the physical level to detail the levels of authentications required and the&#xD;
    implementation approach taking into consideration non-functional and other requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The level of authentication assurance required depends upon many factors. The context of the access (e.g., Local or&#xD;
    remote, dedicated or dial-up access, etc.) is the main consideration in specifying the level of assurance. A simple&#xD;
    username and password may be sufficient within physically protected spaces; however, biometric or user hardware token&#xD;
    may be required under other circumstances (e.g., a teleworker). This is defined at the physical level of the IT&#xD;
    architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For further details of Authentication, see the UML model, specifically the Subject authentication sequence diagrams in&#xD;
    Figure&amp;nbsp;13 and Figure 14, and described below.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Confidentiality&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Confidentiality, in its broadest definition, is the protection of information from unauthorized access. This definition&#xD;
    can encompass the need for all types of PEPs; however, it commonly is limited to the protection of data in transit or&#xD;
    of data at rest.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Given this more specific definition, the need for confidentiality services is very much policy driven. Confidentiality&#xD;
    services are provided where required by policy. Two high-level types of confidentiality services are required; namely,&#xD;
    services for the protection of data in transit and services for the protection of data at rest. Both areas are normally&#xD;
    addressed through the application of encryption, but specific solutions like this are beyond the scope of this&#xD;
    reference model. A summary follows, but note that combinations of these solutions may be required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For data in transit, confidentiality for the following areas is addressed:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Physical WAN communications;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Virtual circuits (e.g., Sessions, VPN, etc.);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Application layer communications (e.g., E-mail and attachments, FTP, Web, and other data exchanges).&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    For data at rest, confidentiality for the following areas is addressed:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Temporary storage;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Permanent storage.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    It should be noted that there is always a trade-off in the physical design, a trade-off regarding the level protection&#xD;
    provided at each of the various layers in the security onion. For example, one may provide for very strong Zone&#xD;
    protection (e.g., A Firewall implementation of a Zone PEP), which may negate the need for protection of the data at&#xD;
    rest within the Zone.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Availability&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Within this architectural pattern, one can only indicate the importance of the various services and components within&#xD;
    the architecture. Availability requirements, specified as non-functional requirements, can only be met through&#xD;
    application of good design and implementation, through provision of redundant hardware or software services and&#xD;
    components, which is beyond the scope of this reference model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Operational aspects, such as system and network management and monitoring, are also beyond the scope of this security&#xD;
    reference model other than mentioning that it is very important in support of availability requirements.&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Integrity&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The need for integrity spans all aspects of architecture. The security context is usually limited to the integrity of&#xD;
    data and services, but it is more than that. IT systems are comprised of many aspects and components, which are all&#xD;
    important to the integrity of the data and services provided. Integrity may be summarized as the protection of systems,&#xD;
    services, data, and other IT aspects from malicious or inadvertent modification or misuse.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The integrity of the following aspects must be addressed at implementation:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Data integrity (accuracy and completeness of data);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Service and component integrity;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        PEP integrity;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Network integrity.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Many options and approaches to addressing integrity exist, such as digital signatures, encryption, etc. Again, choices&#xD;
    are made in the physical design to address integrity requirements. The main driver for these decisions is the&#xD;
    sensitivity or importance of the service, data or network in question. The integrity of all security services is of&#xD;
    very high importance.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Dynamic View of the Model&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The dynamic aspect of the pattern is illustrated through two sequence diagrams, one describing how it works in the&#xD;
    context of a Domain shown in Figure 13, and the other illustrating how it works in the context of applications as shown&#xD;
    in Figure 14. They illustrate simple scenarios of how Subjects, Policy Enforcement Points, Roles, Sessions, Policy&#xD;
    Decision Points, and Protected Objects all work together to provide the required level of access control.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is actually one sequence diagram divided into two views; the first, shown in Figure 13, shows how the Subject&#xD;
    authenticates to the Domain, establishing a primary session with the Domain. The second, shown in Figure 14, follows on&#xD;
    from the Domain scenario, with the Subject in this case accessing a Protected Object; namely, an &lt;em>application&lt;/em>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;em>Domain&lt;/em> scenario, shown in Figure 13, is initiated when the Subject requests to login to the Domain. A&#xD;
    secure communications path is establish, to protect the exchange of sensitive information, and optionally to secure&#xD;
    information stored on the client, after which the Subject presents their identity and credentials. The Domain Policy&#xD;
    Enforcement Point (PEP) validates the provided identity and credential, obtains information about the Protected Object&#xD;
    being accessed (the &lt;em>EntDomain&lt;/em> Domain in this case) and categorizes the Subject’s access based upon the&#xD;
    Protected Object involved (i.e., &lt;em>EntDomain&lt;/em>), the Subject’s “Location” (i.e., Method of access to the domain;&#xD;
    namely, local or remote) and other information in the Subject’s profile.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The &lt;em>GetCompountActions&lt;/em> step then determines more fined-grained access permitted (e.g., can the user access a&#xD;
    sensitive Data Item) based upon all information available. Based upon all this information, a Functional Role is&#xD;
    created, &lt;em>Functional-1&lt;/em> in this case. In the Domain context, the Subject should be assigned (at enrollment time)&#xD;
    basic Functional Roles (e.g., &lt;em>employee&lt;/em> or &lt;em>remoteAccessEmployee&lt;/em>), which will provide for very&#xD;
    course-grained access control (i.e., It defines which enterprise applications and services the Subject may use, such as&#xD;
    e-mail, Intranet, financial services, etc.).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The applicable policy and permissions associate with this Role are obtained and the Domain Session is created, but not&#xD;
    before the Session Establishment Policy check is performed. Finally the session information (i.e., identity, roles, and&#xD;
    permissions) is set, both within the Domain PEP and the Subject. This session information is protected on the PEP and&#xD;
    on the Subject’s client system.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Dynamic Access Control Sequence Diagram in a Domain Context&quot;&#xD;
    src=&quot;./resources/Security-Seq-Domain-Part.png&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 13&amp;nbsp;–&amp;nbsp;Dynamic Access Control Sequence Diagram in a Domain Context&lt;/strong>&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The application scenario, shown in Figure 14, is initiated after the Domain authentication scenario when the Subject&#xD;
    requests access to a Protected Object—to an application in this example. The &lt;em>Appl&lt;/em> Zone PEP intercepts the&#xD;
    request and performs an initial validation of the query. The &lt;em>Appl&lt;/em> PEP then requests a policy decision from the&#xD;
    &lt;em>EntDomain&lt;/em> PEP. The PEP then examines the query and the Subject’s credentials. It also verifies that the&#xD;
    Subject is permitted access to the application during this date and time. The system, network, access, retention, and&#xD;
    security policies are all consulted and an access decision is made. Business rules are also consulted to ensure base&#xD;
    security and business policy permits access.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp; &lt;img alt=&quot;Dynamic Access Control Sequence Diagram Showing the Application Portion&quot;&#xD;
    src=&quot;./resources/Security-Seq-Appl-Part.png&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 14&amp;nbsp;–&amp;nbsp;Dynamic Access Control Sequence Diagram&amp;nbsp;Showing the Application&#xD;
    Portion&lt;/strong>&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Subject’s access to the &lt;em>Appl&lt;/em> Zone is verified after which the authorization decision is made. There may be&#xD;
    conflicts between various policies and rules; therefore, a conflict resolution step is included. The decision is&#xD;
    finally communicated and delegated to the PEP. Additional Functional Roles may be created at this point, based upon the&#xD;
    delegated policy information, which will permit the Subject to access the application. The &lt;em>Functional-2&lt;/em> Role&#xD;
    is created. Optionally, depending upon the intelligence of the Zone PEP and the level of security required, the&#xD;
    &lt;em>Functional-2&lt;/em> Role or the Zone PEP creates the session with the application &lt;em>Appl&lt;/em>. The &lt;em>Appl&lt;/em>&#xD;
    session checks the Session Establishment Policy and if OK creates the session. The Dynamic Role Assignment and&#xD;
    Delegation Policy is consulted, resulting in the &lt;em>Contextual-1&lt;/em> Contextual Role being created. Permissions are&#xD;
    determined and the session information is updated.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The session information is passed to both the Zone PEP and to the Domain PEP (and the Subject’s client). Finally the&#xD;
    Subject’s request is redirected to the &lt;em>Appl&lt;/em> Protected Object along with appropriate roles and permissions. The&#xD;
    setting of session data on the Zone PEP is optional, as is the delegation of policy enforcement from the Domain PEP to&#xD;
    the Zone PEP, depending upon the intelligence of the Zone PEP.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    IT Security Pattern Summary&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The IT security pattern is summarized in Figure 15.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Complete IT Security Reference Model&quot; src=&quot;./resources/Security-Overview.png&quot; />&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 15&amp;nbsp;–&amp;nbsp;Complete IT Security Reference Model&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The scope for Roles is the Domain, but cross Domain interoperability is required (i.e., Enterprises interoperate with&#xD;
    suppliers, partners, and clients). This is accomplished through the establishment of “trust” between Domains, and&#xD;
    through the standardization of credentials. The extension of trust is done through a Public Key Infrastructure (PKI)&#xD;
    being cross-certified with the other parties (i.e., supplier and partner) or via a third party. The standardization of&#xD;
    credentials is also needed (i.e., Subject/Object attributes), along with the ability to share them as in the&#xD;
    &lt;em>Security Assertion Markup Language&lt;/em> (SAML) &lt;a&#xD;
    href=&quot;./../../../UAM/guidances/supportingmaterials/uam_references_229FFDF2.html&quot; guid=&quot;_nQFYAMb-EeK4P8KZ6MNYcg&quot;>(OASIS&#xD;
    2005)&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A trade-off is defined at implementation regarding the level of protection provided at each of the various security&#xD;
    layers (i.e., PEPs). For example, one may provide very strong Zone protection (e.g., A Firewall implementation of a&#xD;
    Zone PEP), which may negate protection of the data at rest within the Zone. (A CRUD matrix is used to define and&#xD;
    understand the relationships between roles, activities and entities: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/guidelines/uam_crud-matrix_F56BDB11.html&quot; guid=&quot;_2xGNwHpfEeSeFZYfCAsIPg&quot;>Guideline: CRUD&#xD;
    Matrix&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Figure&amp;nbsp;15 shows a fairly complete view of the UML model for the IT security architectural pattern. It shows how&#xD;
    Subjects, Policy Enforcement Points, Policy Decision Points, Roles, Sessions, and Protected Objects are related and&#xD;
    structured (statically) to provide the required security services including access control. Missing from this view are&#xD;
    the kinds of Policy Enforcement Points; namely, Domain, Zone, Service, Component, and Data Item PEPs. Also missing, in&#xD;
    the interest of clarity, is the Security Audit class.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The Zone model provides many benefits. Having policies inherited from parent Zones greatly reduces the level of&#xD;
    maintenance of rules. The Zone model also permits optimizations, for example service-to-service calls within a highly&#xD;
    trusted Zone (e.g., a security zone) may be optimized for performance. Security behavior is tailored for each Zone;&#xD;
    permitting the same code to run unaltered in different Zones but with required security policies for each Zone applied&#xD;
    appropriately.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>&amp;copy; David W Enstrom, 2016. All rights reserved.&lt;/strong>&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:GuidanceDescription>
