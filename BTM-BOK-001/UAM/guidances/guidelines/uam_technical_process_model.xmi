<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-qfPjkk3TPNbxukYXA1ztIg" name="uam_technical_process_model,_qYVn8O6hEdy8F4k6ANL48Q" guid="-qfPjkk3TPNbxukYXA1ztIg" authors="DW Enstrom" changeDate="2015-01-21T17:56:22.862-0500" version="1.0.0">
  <mainDescription>&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Unified architecture Method (UAM) uses the concepts and terminology as defined by the OMG's Business Process Model&#xD;
    and Notation definition to describe business activities, processes and tasks. See: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/whitepapers/uam_bpmn_intro_tutorial_426154F6.html&quot;&#xD;
    guid=&quot;_gYTbgN2MEdyVUKFKTmaZUA&quot;>Whitepaper: BPMN - an Introductory Tutorial&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    BPMN defines business activities, which&amp;nbsp;denote work to be performed as part of a business process. Activities in&#xD;
    turn represent either a Task (an atomic activity) or a Sub-Process (a compound activity). &lt;em>Activities&lt;/em>, in the&#xD;
    UAM context,&amp;nbsp;are used to partition and understand the structure of&amp;nbsp;the&amp;nbsp;system under study, from a&#xD;
    process perspective, resulting in&amp;nbsp;manageable chunks, in much the same way that an enterprise is typically&#xD;
    partitioned into inter-dependent business lines and business units. However, the role and purpose of different parts of&#xD;
    an organization are not always clear to other parts of it, which results in less-than-optimal interactions when&#xD;
    executing a business process. The Technical Process Model therefore defines all of the activities&amp;nbsp;of the system at&#xD;
    the Technical level.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some UAM &lt;em>activities&lt;/em> are slight abstractions the BPMN concept. Activities are abstracted&amp;nbsp;and related to&#xD;
    roles and resources (and possibly other activities or sub-activities), and they also explicitly define&#xD;
    &lt;i>interfaces&lt;/i>,&amp;nbsp;and the set of processes and tasks (services or responsibilities) they provide.&amp;nbsp;This use&#xD;
    of an abstraction of &lt;em>activity&lt;/em> goes hand-in-hand with using models at different levels of abstraction as in the&#xD;
    UAM&amp;nbsp;(see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/concepts/uam_complex_modelling_A4EC9E37.html&quot; guid=&quot;_PjkWoObaEdyjVoHXO3Mbfg&quot;>Concept:&#xD;
    Complex IT Architectures&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        &lt;strong>&lt;u>Note&lt;/u>:&lt;/strong> Since UAM may be used at any level within the enterprise, the level of detail to be&#xD;
        included in this model is a judgment call of the architect, based upon:&#xD;
    &lt;/p>&#xD;
    &lt;div style=&quot;MARGIN-LEFT: 2em&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                The objective of the architecture effort&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The size of the enterprise or (business line)&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Time and resource constraints&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/div>&#xD;
&lt;/blockquote>&#xD;
&lt;p>&#xD;
    Layering the process model is a convenient way to deal with complexity. Start with a top-level of activities, which are&#xD;
    typically the &lt;em>leaf&lt;/em> activities of the Logical Process Model and are abstractions of all the system's&#xD;
    activities, with the next (technical) layer of detail shown using more detailed diagrams. More diagrams can be used as&#xD;
    well if the size and complexity warrants more layers. As with the Technical Entity Model a switch from layering to deal&#xD;
    with complexity, to using partitioning will be needed at the lowest levels of detail in the Technical Process Model.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Technical Aspects&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/guidelines/uam_logical_process_model_38D5D114.html&quot;&#xD;
    guid=&quot;_Cr8VIOyGEdykP9GoXvwZVg&quot;>Guideline: Logical Process Model&lt;/a>&amp;nbsp;activities were described, including a view of&#xD;
    them as components along with other aspects such as&amp;nbsp;their relationship to roles and&amp;nbsp;actors&amp;nbsp;and how&#xD;
    structuring helps—all very much focused on logical-level considerations. Now we need to add more detail to the&#xD;
    activities, and introduce specific technical aspects important to workflow processes and tasks, namely:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Storage Technology&lt;/strong>&amp;nbsp;- storage service solution technology standards are defined;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Server Technology&lt;/strong> - server technology standards are defined, and&amp;nbsp;how the tasks are to be&#xD;
        structured into applications/services and logically deployed to servers;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Presentation Technology&lt;/strong>&amp;nbsp;- presentation level service standards and patterns&amp;nbsp;are defined&#xD;
        in support of&amp;nbsp;&lt;em>role&lt;/em> interactions with the tasks, processes and sub-processes. Optionally how&#xD;
        presentation level service solution support &lt;em>user&lt;/em> interactions (namely, a possible collection of roles),&#xD;
        the&amp;nbsp;execution of an &lt;em>end-to-end business scenario;&lt;/em>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Messaging Technology&lt;/strong>&amp;nbsp;- specification of the workflow technology and standards that bring it&#xD;
        all together.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Technical Process Model is used, within the enterprise architecture context, to either specify technical patterns&#xD;
    for the enterprise, or (if the scope, scale and resources are appropriate for the system being architected) to document&#xD;
    an implementation level view of the system. Both may be described, if desired and appropriate, as well. These patterns&#xD;
    may be generic, such as 'n-tier' or 'client server'. They may also be specific in terms of technologies and where and&#xD;
    how to use them, such as 'IBM SAA ImagePlus IBM FlowMark' with configuration 'xyz'. These standards may be shown in&#xD;
    this model, however they &lt;em>must&lt;/em> be documented in Architectural Decisions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Complexity is dealt with through partitioning of the model, based upon either location considerations or technology&#xD;
    solutions. A combination may work as well.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Key to the technical view is the deployment locations model, which is used to show how processes and the required&#xD;
    supporting infrastructure are organized and deployed throughout the enterprise. In other words, some process model&#xD;
    aspects may be shown to best advantage in the locations model. Technical choices, the enterprise technical standards,&#xD;
    and how they are used/deployed are also shown. Add links to these locations diagrams from the technical process model&#xD;
    diagrams.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Technical Processes&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The example below shows the set of&amp;nbsp;Technical Activities (i.e., process) of&amp;nbsp;the research lab within the&#xD;
    ThuNorTech fictitious enterprise used in the UAM example architecture (See: &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../UAM/customcategories/uam_examples_view_8972F3FE.html&quot; guid=&quot;_LVNzcLvYEeKBoecYDPr3dQ&quot;>UAM&#xD;
    Examples&lt;/a>). This process provides the &quot;Perform Lab Study&quot; service to customers. &amp;nbsp;The diagram shows how the&#xD;
    defined activities interact to perform&amp;nbsp;a lab study. From this diagram, it becomes apparent that the&#xD;
    responsibilities can be reassigned by allocating an interface to another business activity—to re-direct the workflow to&#xD;
    modify or augment the process. This reallocation of responsibility would conceptually have no effect on other business&#xD;
    activities that make use of them.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;ThuNorTech - Perform Lab Study Activities&quot; src=&quot;./resources/BL-Technical-Res-Perform-Lab-Study.png&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 1 - A simple Business Process Model with collaborating activities&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This&amp;nbsp;UAM process description, part of the Technical Process Model, in no way defines the solution approach. SOA,&#xD;
    Client-Server or any other approach may be used to implement these activities and processes—decisions that are made at&#xD;
    the Logical but more likely at the Technical level.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Technical Activities Contain Actors and Resources&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    An activity is an abstraction of a collection of people, hardware, and software and other resources that work together&#xD;
    to perform the responsibilities of the business process. They are an &quot;abstraction&quot; because we describe models of the&#xD;
    processes in terms of activities, roles and resources. An activity contains actors, and may contain roles and entities.&#xD;
    A &lt;em>task&lt;/em> is an &lt;em>activity&lt;/em> that cannot be decomposed any further in the modeling effort. An entity is a&#xD;
    piece of information created or manipulated by activities or systems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    During the technical modeling effort, decisions made are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        A role binding to&amp;nbsp;activities;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Roles are re-factored in order to simplify and address RBAC requirements;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A human (or humans)&amp;nbsp;is bound to a particular business actor;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The activity and associated actor or role will be fulfilled by software and associated computational hardware (i.e.&#xD;
        manual vs. automation decisions).&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A single activity or small set of activities may capture a very complex system, with associated actors, and possibly&#xD;
    roles and resources. In some cases this high-level of abstraction is required and desired in order to hide complexity.&#xD;
    These activities can eventually be mapped to human resources, or to specific hardware or software systems. This&#xD;
    abstraction helps keep the focus on the actors and interfaces of the activities&amp;nbsp;and determine the &lt;i>necessary&lt;/i>&#xD;
    responsibilities without having to consider the (usually imperfect) real situation of a specific person or&#xD;
    system.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Structuring the Technical Process Model&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    There are three main reasons for structuring the Technical Process Model:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Make the activities and processes easier to understand;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Reuse parts of workflows that are shared among many processes;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Make the the model easier to maintain.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Layering may be done&amp;nbsp;in any perspective and aspect (see: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/concepts/uam_levels_and_views_499BC4B8.html&quot; guid=&quot;_W4UEAMqpEdy25fQyv59CjQ&quot;>Concept:&#xD;
    Architecture Perspectives and Viewpoints&lt;/a>). In addition to the partitioning approach where multiple activities are&#xD;
    formed into processes, one may also layer activities.&amp;nbsp;High-level layers provide general viewpoints of the&#xD;
    enterprise or the &quot;system&quot; at a high conceptual level, with lower layers adding detail. This fits nicely with the&#xD;
    audience for these different viewpoints and layers. For example, a company's executive management, as well as its&#xD;
    process owners, are interested in their company's business models—management work with&amp;nbsp;overall views and&#xD;
    objectives, whereas the process owners and leaders need a more detailed picture of how their process should be&#xD;
    performed.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If the &quot;system&quot; being architected is a large and complex enterprise, or if differences between the executives' and the&#xD;
    process owners' views of the organization are great,&amp;nbsp;this can be dealt with by developing two&amp;nbsp;(or more yet&#xD;
    related)&amp;nbsp;layers. One model, for the executives, would contain a set of high-level business activities that show&#xD;
    the intent and purpose of the organization. The other model, for the process owners, would contain a detailed set of&#xD;
    activities that help clarify how the organization needs to function internally. For each high-level activity, you could&#xD;
    define one, or several, detailed activities representing the same thing within the organization. For example, you could&#xD;
    start with the primary actor, detail the results and services he or she is interested in,&amp;nbsp;then develop a separate&#xD;
    activity&amp;nbsp;for each detailed area.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you want to engineer your organization one activity at a time, you can apply this technique incrementally. First&#xD;
    make a high-level activities model of the entire business and then &quot;drill-down&quot; into one of the activities of interest&#xD;
    to provide a more detailed model for the process owner. There is a one-to-one relationship between a high-level&#xD;
    (business) activities and its set of more detailed activities—with the detail &lt;em>encapsulated&lt;/em> within the&#xD;
    activity. The figure below illustrates this concept. The &quot;Sales &amp;amp; Marketing&quot; activity (Contained within a Customer&#xD;
    Relationship Management (CRM) high-level activity) is drilled-down to expose more details.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;Layering of the IT Architecture to deal with Complexity&quot;&#xD;
    src=&quot;./resources/Concepts_Technical_Layers.png&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot; align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;3 - Layering of IT Architectures to deal with complexity&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot; align=&quot;left&quot;>&#xD;
    Note the&amp;nbsp;&lt;img alt=&quot;Next layer defined decorator&quot; src=&quot;./resources/Drill-Down.png&quot; /> decorator on the &quot;Sales &amp;amp;&#xD;
    Marketing&quot; activity, indicating that the next layer of detail of this &quot;collapsed sub-process&quot; has been defined.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The options for dealing with complexity are described in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/concepts/uam_complex_modelling_A4EC9E37.html&quot; guid=&quot;_PjkWoObaEdyjVoHXO3Mbfg&quot;>Concept:&#xD;
    Complex IT Architectures&lt;/a>. For more information also see: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/guidelines/uam_diagrams_in_business_pers_F47177D2.html&quot;&#xD;
    guid=&quot;_aVWS0OSYEdy7f9KmjDtwsA&quot;>Guideline: Business Perspective Views&lt;/a>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Practical Advice&#xD;
&lt;/h3>&#xD;
&lt;h5>&#xD;
    Understanding the fundamental capabilities of the COTS technologies that apply.&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The role of the IT architect is very&amp;nbsp;important at this stage.&amp;nbsp;They must share their knowledge of the generic&#xD;
    capabilities of the technologies that could add value to the delivery of business services.&amp;nbsp;The elaboration of an&#xD;
    architectural vision provides a context and means for sharing this information.&amp;nbsp;This vision must provide a common&#xD;
    understanding of the role that each major technology component plays including any legacy systems, custom applications,&#xD;
    and generic commercial technology products.&amp;nbsp; The vision must also address the generic means of communicating&#xD;
    between these components (i.e., messaging, file drop, database level interface, etc.). With these general principles&#xD;
    established and decided, the team preparing the Technical Process Models are then in a position to decide on the&#xD;
    details of what components will be doing what as well as the dialogue needed between them and / or the data stores they&#xD;
    need to share.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    What to automate?&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Where there is a choice provided by the generic technology selections made, deciding whether to automate the delivery&#xD;
    of a business service or task comes down to volumes.&amp;nbsp;Automating the delivery of a business service that only has a&#xD;
    handful of requests per year does not make any financial sense if you have to develop some custom application in order&#xD;
    to do so.&amp;nbsp;Similarly, if a rare exception in the business process requires the execution of a rarely performed task&#xD;
    then consider simple options for the performance of this task.&amp;nbsp;Often, rare exceptions can have complex rules that&#xD;
    go with them; and therefore, automating them is not cost-effective.&amp;nbsp; These tasks can be put to a user for&#xD;
    exception handling.&amp;nbsp;For example, on most call center systems there are automated options that address 90% of the&#xD;
    things that a customer will want to do and there is an option to speak to a clerk for the remaining requests.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Redesigning the business to mesh with the new technology&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    Understanding the cost and impact of adapting the business is critical and this is where the &lt;em>as-is&lt;/em> logical&#xD;
    model and a mathematical representation of it comes into play.&amp;nbsp;If there are various high-level architectural&#xD;
    options being considered, then these tools will provide the means for measuring the overall business operational impact&#xD;
    in terms of staffing, throughput, and service times.&amp;nbsp;Obtaining an understanding of the demand for services under&#xD;
    the new model is also important in this exercise.&amp;nbsp;Group sessions with clients, client interviews, client surveys,&#xD;
    and extrapolation from historical data are techniques that can be used to gather this kind of information.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once technology decisions are made, the original business process model may require changes.&amp;nbsp;However, typically&#xD;
    the business vision is based on some fundamental aspects of modern technology and if the business process modeling was&#xD;
    based on a sound and stable vision without getting into too much detail then the business process model and business&#xD;
    requirements could remain stable throughout a number of architectural tweaks.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    What is an activity at the Technical level?&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    An activity at the Technical level has a specific types (i.e., call activity, collapsed subprocess,&amp;nbsp;task,&#xD;
    transaction) and tasks have specific types (i.e., user, manual, service, business rule task, etc.).&amp;nbsp; A Technical&#xD;
    Process Model must encapsulate the functionality of the system being architected.&amp;nbsp;Layering is important for hiding&#xD;
    complexity as more detail is required at the Technical level than at the Business and Logical levels.&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    What is a task at the Technical level?&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    A task is typically performed by a single person or a single system and has a single purpose (i.e., it is an atomic&#xD;
    activity).&amp;nbsp;If performed by a person, then the task represents a single multi-functional user interface.&amp;nbsp;The&#xD;
    task may encapsulate many steps taken by the user on the user interface.&amp;nbsp;A &quot;service task&quot; is functionally&#xD;
    cohesive, fully automated and is performed by a single system component.&amp;nbsp;&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    How do business rules fit in?&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    At the Technical level, the business rules must be expressed in a more structured format to ensure completeness,&#xD;
    accuracy and ease of maintenance.&amp;nbsp;Other types of rules will come into play, but the ‘true’ business rules should&#xD;
    continue to be expressed and managed independently.&amp;nbsp;Decision tables are recommended at this level for business&#xD;
    rules, gateway logic, and other processing rules. This will ease maintenance of the system considerably.&amp;nbsp;At this&#xD;
    level, all of the rules must be attached to an activity by reference to the &lt;a&#xD;
    href=&quot;http://en.wikipedia.org/wiki/Decision_table&quot; target=&quot;_blank&quot;>decision table&lt;/a> in the activity&#xD;
    description.&amp;nbsp;Isolating the business rules in separate activities (multiple rules invoked in one activity is fine)&#xD;
    can assist in their visibility for those maintaining a process model.&amp;nbsp;In addition, expressing other kinds of&#xD;
    processing logic in decision tables can aid in the maintainability.&amp;nbsp;Often processing rules are the outcome of&#xD;
    business rules.&amp;nbsp;For example, suppose that a company has a business rule that only service agreement holders are&#xD;
    offered certain promotions.&amp;nbsp;As a consequence of this business rule they might be directed to a specific type of&#xD;
    agent when they call, a processing rule that occurs at a specific point in time.&amp;nbsp;Once in place, executable&#xD;
    decision tables should be maintainable by business analysts and need not require programmer&#xD;
    intervention.&amp;nbsp;References:&amp;nbsp; &lt;a href=&quot;http://www.brsolutions.com/publications.php#books&quot; target=&quot;_blank&quot;>Ronald&#xD;
    Ross books&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    How do functional requirements fit it?&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The functional requirements can be placed within the context of the activities and tasks within the Technical Process&#xD;
    Model, bearing in mind that the complete description of functionality of the system is not necessarily an architecture&#xD;
    effort.&amp;nbsp;Details of message formats, user interface functionality, report contents and formats,&amp;nbsp;etc. are left&#xD;
    to detailed design.&amp;nbsp;&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    BPMN usage at the Technical level&#xD;
&lt;/h5>&#xD;
&lt;p>&#xD;
    The set of modeling elements for the process aspect, and all other&amp;nbsp;Technical level viewpoints, are defined in the&#xD;
    Technical Perspective Language.&amp;nbsp;Even at this level do not get carried away with the notation.&amp;nbsp;The important&#xD;
    elements are the task types and the judicious use of lanes and pools.&amp;nbsp;If lanes make it too complicated to portray&#xD;
    the model clearly, then avoid them and include the ‘component name’ in the activity description template.&amp;nbsp;If there&#xD;
    is messaging between components, then place the components in separate pools to portray the messages going back and&#xD;
    forth. If the components are integrated through a database, then lanes can be used to represent the&#xD;
    components.&amp;nbsp;&lt;br />&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Characteristics of a Good Process Model&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Activities&amp;nbsp;are all defined, including end-to-end business scenarios.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The activity structure is defined and agreed, with the architecture of the process, sub-process and&#xD;
        tasks&amp;nbsp;supporting flexibility and adaptability (to changing business needs and priorities).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The relationship&amp;nbsp;to and usage of logical entities by processes and tasks is defined.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The inevitable complexity of processes and tasks at the enterprise level is&amp;nbsp;managed by: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Defining a few high-level activities, with drill-down to lower level detail (see: &lt;a&#xD;
                class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/concepts/uam_complex_modelling_A4EC9E37.html&quot;&#xD;
                guid=&quot;_PjkWoObaEdyjVoHXO3Mbfg&quot;>Concept: Complex IT Architectures&lt;/a>).&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Limiting process detail to 3 or 4 levels of drill-down.&amp;nbsp;&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Use visual models and visual cues (color, etc.) to organize the model and make it comprehensible.&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Small use cases are often easy to understand. However, make sure that the use case describes a complete&#xD;
                workflow that produces something of value for a customer.&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each activity, process, sub-process and task must be unique. If there are similarities, consider merging them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Security aspects have been identified and solutions modeled.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    References&amp;nbsp;&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Many references exist for doing process modeling. Included here is a tutorial and reference for OMG's BPMN standard,&#xD;
    which this method subscribes to:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/whitepapers/uam_bpmn_intro_tutorial_426154F6.html&quot;&#xD;
        guid=&quot;_gYTbgN2MEdyVUKFKTmaZUA&quot;>Whitepaper: BPMN - an Introductory Tutorial&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/whitepapers/uam_bpmn_standards_84B155CD.html&quot;&#xD;
        guid=&quot;_JqlCMOAEEdynr9jlfK-aMA&quot;>Whitepaper: BPMN - the standard&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
