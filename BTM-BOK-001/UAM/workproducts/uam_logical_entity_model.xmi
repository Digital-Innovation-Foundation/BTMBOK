<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ArtifactDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-3XQjh__aA-OfXAFh2HhqEQ" name="uam_logical_entity_model,_UkGJEM6jEdymj4NXv8-FYA" guid="-3XQjh__aA-OfXAFh2HhqEQ" authors="DW Enstrom" changeDate="2015-12-01T14:47:40.014-0500" changeDescription="New" version="2.0.0">
  <mainDescription>&lt;p>&#xD;
    The Logical Entity Model defines a logical data model for the enterprise or system, as defined by the scope of the&#xD;
    modeling effort. The objective is to clearly define the entities involved, and the relationships between them needed to&#xD;
    support the defined logical processes. The definition must be valid for the defined scope, and must eliminate any&#xD;
    ambiguity regarding what they represent.&#xD;
&lt;/p>&lt;a id=&quot;XE_Logical_Perspective__Logical_Entity_Model&quot; name=&quot;XE_Logical_Perspective__Logical_Entity_Model&quot;>&lt;/a> &#xD;
&lt;p>&#xD;
    Relationships between entities are derived directly from analysis of the business, its activities and processes. Two&#xD;
    main aspects are important, the relationships supporting the business processes and functions, and the relationships&#xD;
    supporting the monitoring and management of the business. Note that generalizations, aggregations and other types of&#xD;
    analysis are added at this logical level. All attributes of the entities should be defined along with candidate keys&#xD;
    and identities for each if desired.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The logical actors and logical roles that work with these entities are also identified if desired. The structure of&#xD;
    defined actors and roles, along with their relationships to entities, is used to identify the access controls aspect of&#xD;
    IT security required. This part of the model is derived from and uses elements from other views, such as the Logical&#xD;
    Process Model and the Logical Roles Model, which illustrates how intertwined and dependent the viewpoints are within&#xD;
    UAM, or any architecture for that matter. See the Logical Process Model and Logical Roles Model definitions for more&#xD;
    detail regarding these derived relationships to Logical Roles.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The entities along with relationships, represent a logical model of the entities. This model should evolve quickly and&#xD;
    may remain fluid for some time as different representations and their implications are explored. Formal documentation&#xD;
    can impede this process, so be careful how much energy you expend on maintaining this 'model' in a formal&#xD;
    sense.&amp;nbsp;Don't spend a&amp;nbsp;lot of time polishing the model, which my be expendable, until it is stable. The&#xD;
    entities, if chosen carefully will survive into the&amp;nbsp;Technical level relatively unchanged. However, some of them&#xD;
    may represent whole collaborations of objects, often encapsulated by subsystems in the Technical model, and certainly&#xD;
    when a project is instantiated to implement&amp;nbsp;the system then a lot more analysis will be done and detail added,&#xD;
    which will likely result in much re-factoring of the model at the very least.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    &lt;em>As-Is&lt;/em> Model vs. &lt;em>To-Be&lt;/em> Model&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    If the purpose of the modeling effort is to do business re-engineering, one should consider building two variants of&#xD;
    the Logical Entity Model: one that shows the current situation and one that shows the envisaged new target situation.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The current versions of the Logical Entity Model is compared to the target version to identify changes. The target&#xD;
    version of the model requires most of the work. The current data and relationships need to be reconsidered and aligned&#xD;
    with the new business strategy and goals.&#xD;
&lt;/p></mainDescription>
  <purpose>&lt;p>&#xD;
    The Logical Entity Model is a description&amp;nbsp;of the entities involved in the system, as defined by the scope of the&#xD;
    modeling effort. The objective is to clearly define the entities involved, and the relationships between them. The&#xD;
    definition must be valid for the defined scope, and must eliminate any ambiguity regarding what they represent.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Relationships between entities are derived directly from analysis of the business, its logical level functions and&#xD;
    processes. Two main aspects are important, the relationships supporting the processes and functions, and the&#xD;
    relationships supporting the monitoring and management of the business. At this logical level of analysis&#xD;
    generalizations, aggregations and other types of structural analysis is done.&#xD;
&lt;/p></purpose>
  <impactOfNotHaving>&lt;p>&#xD;
    Failure to produce this model means you run the risk that architects and designers will give only superficial attention&#xD;
    to the way the business operates and how entities are involved. They will do what they know best, which is to design&#xD;
    and build software in the absence of proper business knowledge. The result often is that the constructed systems do not&#xD;
    support the needs of the business.&#xD;
&lt;/p></impactOfNotHaving>
  <representationOptions>&lt;p>&#xD;
    &lt;strong>UML Representation&lt;/strong>: Package stereotyped as «LPL_LEM» containing class diagrams.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A &lt;strong>Logical Entity Model&lt;/strong> may have the following properties:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Introduction:&lt;/strong> A textual description that serves as a brief introduction to the model.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Packages:&lt;/strong> The packages in the model, representing a hierarchy, with one top-level: &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Logical Entity Model (contained within the Logical Perspective package)&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Entities:&lt;/strong> The entities in the model, owned by the packages stereotyped as «LPL_Entity».&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Relationships:&lt;/strong> The relationships in the model, owned by the packages (i.e., simple, aggregation&#xD;
        and generalization).&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Diagrams:&lt;/strong> The diagrams in the model, owned by the packages.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The Logical Entity Model is in essence a class diagram.&amp;nbsp;Note that entity operations are optional.&lt;br />&#xD;
    &lt;br />&#xD;
    The Logical Entity Model is a refinement of the Business Entity Model, with the addition of computational concepts such&#xD;
    as storage and other persistence related constructs. Most &lt;em>things&lt;/em> defined at this stage will go on to be&#xD;
    described in more detail during the development of the Technical view. Note that the Logical Entity Model is only&#xD;
    updated during subsequent phases to add entities not included in the original model or those needed in support of&#xD;
    computational aspects. Ensuring that there is traceability to business level entities from the Logical Entity Model is&#xD;
    valuable in the long run; this linkage supports the easy identification and modification of the model to support&#xD;
    changing business needs and priorities. This artifact is enclosed within the&amp;nbsp;Logical Perspective&amp;nbsp; artifact.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    &lt;strong>Decide on the following:&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The sub-package structure for the Logical Entity Model package;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Properties to include;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Whether or not any extensions to the Unified Modeling Language (UML) are needed; additional stereotypes or&#xD;
        profile&amp;nbsp;for example;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The level of formality&amp;nbsp;and detail in the model (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../UAM/guidances/guidelines/uam_logical_pers_1ABDA187.html&quot; guid=&quot;_aiIn4Ou6Edytvcf-4U2D3Q&quot;>Guideline:&#xD;
        Logical Perspective&lt;/a>);&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Tailoring applicable to individual sub-work products;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Whether a single model or multiple models will be used.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Normally the entities&amp;nbsp;in this logical model will evolve directly into elements in the&amp;nbsp;Technical&#xD;
    Perspective.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Points to consider when defining the Logical Entity Model:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The Logical Entity Model is useful when there are multiple target environments, each with separate design&#xD;
        architectures, which is often the case when one takes an system level model as input into a specific project&#xD;
        context. The Logical Entity Model is an abstraction, of design level models. It omits most of the details of the&#xD;
        design in order to provide an overview of the&amp;nbsp;system's functionality.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The design level is sometimes complex,&amp;nbsp;therefore an&amp;nbsp;abstracted logical model is needed to define a&#xD;
        consumable view used to introduce the subject to others within the enterprise.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The extra work required, to ensure that the Logical Entity&amp;nbsp;and&amp;nbsp;Technical level&amp;nbsp;models remain consistent,&#xD;
    must be balanced against the benefit of having a view of the system which represents only the most important details of&#xD;
    how it works. It can be very costly to maintain a high degree of fidelity between the models. A less ambitious approach&#xD;
    might be to maintain the&amp;nbsp;Logical Entity&amp;nbsp;Model with only the most important&amp;nbsp;entities and the key&#xD;
    abstractions. As the complexity of the model increases, so does the cost to maintain it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Once the Logical Entity&amp;nbsp;Model is no longer maintained, its value decays rapidly. At some point, if it is not&#xD;
    maintained, it will cease to be useful as it no longer will accurately reflect the needs of the system. Deciding to no&#xD;
    longer maintain the&amp;nbsp;model may be appropriate (it may have served its purpose), but the decision should be a&#xD;
    conscious one.&#xD;
&lt;/p></representationOptions>
</org.eclipse.epf.uma:ArtifactDescription>
