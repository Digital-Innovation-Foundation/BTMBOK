<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:GuidanceDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-0byaWNgnI9FpdAHKpWz4lw" name="uam_pattern_p2p,_-7KHkIZdEeWxS8WE0a4vpg" guid="-0byaWNgnI9FpdAHKpWz4lw" changeDate="2015-11-09T09:44:25.864-0500" version="7.5.1">
  <mainDescription>&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Peer-to-Peer&amp;nbsp;is&amp;nbsp;a type of decentralized and distributed network architecture in which individual nodes in the&#xD;
    network (called &quot;peers&quot;) act as both suppliers and consumers of resources, in contrast to the centralized clientâ€“server&#xD;
    model where client nodes request access to resources provided by central servers (&lt;a&#xD;
    href=&quot;http://en.wikipedia.org/wiki/Peer-to-peer&quot; target=&quot;_blank&quot;>Wikipedia 2013&lt;/a>).&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Problem Description&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Multiple systems need to share common information and applications along with the resource demands. A peer-to-peer&#xD;
    network is a distributed application architecture that partitions tasks or work loads between peers. Peers are equally&#xD;
    privileged participants in the application.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Applicable Context&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The nodes in a peer-to-peer network need to operate as both &quot;clients&quot; and &quot;servers&quot;; they both provide information and&#xD;
    services and require information and services from other peers. This arrangement is very useful for sharing large&#xD;
    amounts of information, sharing resources, and sharing services.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pattern Constraints&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    This pattern is not applicable if the application or the information cannot be distributed on multiple&#xD;
    servers.&amp;nbsp;The scalability of the applications and information access needs to be examined and managed, since this&#xD;
    may be an issue if growth is expected, especially the numbers of peers that communicate simultaneously. Also, since the&#xD;
    information and application is distributed on servers, IT security becomes and important aspect of the solution.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Pattern Solution&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Peers make a portion of their resources, such as processing power, disk storage or network bandwidth, directly&#xD;
    available to other network participants, without the need for central coordination. Peers are both suppliers and&#xD;
    consumers of resources, in contrast to the traditional client-server model in which the&amp;nbsp;resources are divided.&#xD;
    Emerging collaborative P2P systems are going beyond simple peers providing a single service. Powerful peers are&#xD;
    appearing that bring unique resources and capabilities to a virtual community, providing diverse services beyond those&#xD;
    that can be accomplished by individual peers, yet that are beneficial to all the peers.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Peer-to-peer network topology&quot; src=&quot;./resources/Arch-Pattern-p2p.png&quot; width=&quot;323&quot; height=&quot;312&quot; />&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Peer-to-peer networks generally implement some form of virtual overlay network on top of the physical network topology;&#xD;
    nodes in the overlay form a subset of those in the physical network. Data is still directly exchanged over the network,&#xD;
    but at the application layer peers communicate directly with each other&amp;nbsp;via logical overlay links. These overlays&#xD;
    are used for indexing and peer discovery, and make the P2P system independent from the physical network topology. Based&#xD;
    on how overlay network nodes are linked, and how resources are indexed and located, we can classify them as&#xD;
    &lt;i>unstructured&lt;/i> or &lt;i>structured&lt;/i> (or as a hybrid). See:&amp;nbsp;&lt;a&#xD;
    href=&quot;https://en.wikipedia.org/wiki/Peer-to-peer&quot; target=&quot;_blank&quot;>https://en.wikipedia.org/wiki/Peer-to-peer&lt;/a>&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Related Patterns&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Other variations&amp;nbsp;and related patterns to the peer-to-peer pattern are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>&lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_distributed_FEAB9C15.html&quot;&#xD;
        guid=&quot;_javDAIZeEeWxS8WE0a4vpg&quot;>Distributed Computing Pattern&lt;/a>&amp;nbsp;&lt;/strong>- a system in which peer components,&#xD;
        located on distributed and networked computers coordinate their activity through the passing of messages.&lt;a&#xD;
        id=&quot;XE_Patterns__Distributed_Computing&quot; name=&quot;XE_Patterns__Distributed_Computing&quot;>&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Distributed Computing&quot; src=&quot;./resources/Arch-Pattern-distributed.png&quot; width=&quot;359&quot; height=&quot;425&quot; />&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>&lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_n-tier_DCF39DB8.html&quot;&#xD;
        guid=&quot;__PzscIZeEeWxS8WE0a4vpg&quot;>N-Tier Pattern&lt;/a>&amp;nbsp;&lt;/strong>- multi-tier architecture (often referred to as&#xD;
        n-tier architecture) is a variation of client-server architecture where the presentation, application processing,&#xD;
        and data services are separated.&lt;a id=&quot;XE_Patterns__n-Tier&quot; name=&quot;XE_Patterns__n-Tier&quot;>&lt;/a>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;N-Tier&quot; src=&quot;./resources/Arch-Pattern-n-tier.png&quot; width=&quot;228&quot; height=&quot;250&quot; />&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div>&#xD;
            &lt;strong>&lt;a class=&quot;elementLink&quot;&#xD;
            href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_client-server_2E388191.html&quot;&#xD;
            guid=&quot;_WNX0cLE0EeSgVPmVL1L5GQ&quot;>Client-Server Pattern&lt;/a>&lt;/strong>&amp;nbsp;-&amp;nbsp;The client-server pattern is a&#xD;
            distributed application structure in computing that partitions workloads between the providers of a resource or&#xD;
            service, called servers, and service requesters, called clients.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Client-server pattern&quot; src=&quot;./resources/Arch-Pattern-client-server.png&quot; width=&quot;323&quot; height=&quot;326&quot; />&#xD;
&lt;/p></mainDescription>
</org.eclipse.epf.uma:GuidanceDescription>
