<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-QwkpJsRPaDpqL8FWjUEEoA" name="uam_it_architecture,_XTWLgN_kEdynr9jlfK-aMA" guid="-QwkpJsRPaDpqL8FWjUEEoA" authors="DW Enstrom" changeDate="2015-11-30T15:03:18.642-0500" version="2.0.0">
  <mainDescription>&lt;a id=&quot;XE_IT_Architecture&quot; name=&quot;XE_IT_Architecture&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    &lt;a>Introduction&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Architecture&amp;nbsp;is a concept that is easy to understand and that most engineers intuitively relate to,&amp;nbsp;but it is&#xD;
    hard to define precisely. In particular, it is difficult to draw a sharp line between &lt;em>design&lt;/em> and&#xD;
    &lt;em>architecture&lt;/em>—architecture is one aspect of design that concentrates on some specific features of the system.&#xD;
    Also, what is the difference between &lt;em>architecture&lt;/em> and &lt;em>engineering&lt;/em> and how do they relate?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    IT architecture, as defined by UAM, is largely characterized as the definition of the elements and their associated&#xD;
    structure that satisfies the required functionality.&amp;nbsp;&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../UAM/guidances/termdefinitions/uam_architecture_C48E11C5.html&quot;&#xD;
    guid=&quot;_tC1F0MI0EeKSedlRPHdUIQ&quot;>Architecture&lt;/a>&amp;nbsp;needs to deal with many aspects, such as organizational&#xD;
    structures, where they and associated business services are located,&amp;nbsp;and&amp;nbsp;end-to-end business processes,&#xD;
    which&amp;nbsp;software and system architects generally do not deal with. The scope of the&amp;nbsp;UAM&#xD;
    architecture&amp;nbsp;activities as well as the aspects examined are much broader that the software architecture or systems&#xD;
    architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    UAM defines&amp;nbsp;&lt;em>architecture&lt;/em> as &quot;the fundamental concepts or properties and organization of a system in its&#xD;
    environment (i.e., context) embodied in its elements that may be almost arbitrarily arranged, their relationships, and&#xD;
    in the principles guiding its design and evolution—defining the &lt;em>form&lt;/em> (of elements) is the main objective, but&#xD;
    balancing &lt;em>form&lt;/em> and &lt;em>function&lt;/em> is key&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In contrast, UAM defines &lt;em>engineering&lt;/em> as &quot;a more restrictive design activity where the components and their&#xD;
    relationships are already defined (i.e., the architecture is defined) and now scientific rigor and precision is applied&#xD;
    to ensure success—&lt;em>function&lt;/em> is key&quot;.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See the definitions for &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/termdefinitions/uam_form_451B249C.html&quot;&#xD;
    guid=&quot;_LNvncMJEEeKSedlRPHdUIQ&quot;>Form&lt;/a>&amp;nbsp;and &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../UAM/guidances/termdefinitions/uam_function_4151081E.html&quot; guid=&quot;__nnVAMJHEeKSedlRPHdUIQ&quot;>Function&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a>Architecture Description&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    To speak and reason about IT architecture, you must first define an architectural representation, a way of describing&#xD;
    important aspects of an architecture. In UAM, this description is captured in the various &lt;em>viewpoint&lt;/em> models&#xD;
    (see: &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/concepts/uam_levels_and_views_499BC4B8.html&quot;&#xD;
    guid=&quot;_W4UEAMqpEdy25fQyv59CjQ&quot;>Concept: Architecture Perspectives and Viewpoints&lt;/a>). Also, within each viewpoint,&#xD;
    multiple levels (i.e., a hierarchy&amp;nbsp;of models) is used to deal with the complexity involved in modeling a complete&#xD;
    &quot;system&quot; (see: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/concepts/uam_complex_modelling_A4EC9E37.html&quot; guid=&quot;_PjkWoObaEdyjVoHXO3Mbfg&quot;>Concept:&#xD;
    Complex IT Architectures&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a>Architectural Viewpoints&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    UAM represents&amp;nbsp;IT architectures&amp;nbsp;using multiple &lt;strong>architectural viewpoints&lt;/strong> or models. Each&#xD;
    architectural viewpoint addresses some specific set of concerns, specific to stakeholders in the development process:&#xD;
    business owners and managers, designers and&amp;nbsp;system/software engineers/architects,&amp;nbsp;and project managers and&#xD;
    implementors. The viewpoints capture the architecture by defining models for different architecture aspects, with these&#xD;
    aspects being&amp;nbsp;related to each other, with the resulting cohesive set of viewpoints defining a perspective. This is&#xD;
    summarized below.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The architectural choices and decisions made, and reflected in the viewpoint models, are all related back to the&#xD;
    business requirements and many other other tactical and strategic inputs that shape the IT architecture. It should be&#xD;
    noted that an IT architecture is in effect defining further &lt;em>constraints&lt;/em> on the requirements and on the design&#xD;
    decisions to be made at a lower level (e.g., detailed design and implementation).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    IT architecture, as note, is&amp;nbsp;described through&amp;nbsp;a number of different architectural viewpoints that are&#xD;
    arranged into perspectives. Each viewpoint&amp;nbsp;shows the IT architecturally&amp;nbsp;from a particular aspect. The set of&#xD;
    perspectives and associated aspects:&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Business Perspective&lt;/strong> (i.e. Computation Independent Models (CIMs)) &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Business Entities Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Business Process Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Business Locations Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Business Roles Model&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Systems Model&lt;/strong> - Platform Independent Models (PIMs) &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Logical Data Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Logical Process Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Logical System Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Logical Roles Model&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Technology Model&lt;/strong> - Platform Specific Models (PSMs) &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Physical Data Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Physical Process Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Physical System Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Physical Roles Model&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When developing an IT architecture, each of these three collections of models (perspectives) is defined.&amp;nbsp;These&#xD;
    perspectives (horizontal collection of viewpoints) and aspects (vertical collection of viewpoints) are depicted&#xD;
    graphically in the following diagram:&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;UAM Perspectives and Aspects&quot; src=&quot;./resources/UAM-FW_Bus_Log_Tech.png&quot; />&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a>Architectural Focus&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Although these viewpoints could represent the complete detailed design of an IT architecture in all its gory detail,&#xD;
    this is often not practical, therefore&amp;nbsp;the architecture concerns itself only with important viewpoints and at an&#xD;
    appropriate level of detail—the purpose of the architecture effort must always be kept in mind. It is recommended to&#xD;
    only include:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Structure&lt;/b> - important architectural structures, patterns,&amp;nbsp;and relationships;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Key Elements&lt;/b> - architecturally significant entities, processes, locations and roles;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Key Scenarios&lt;/b> - the 80% rule is a good one to follow, show the main business processes;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Key Activities&lt;/b> - capture the main business activities (activities &amp;amp; processes).&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    The architectural viewpoints of necessity are &lt;em>abstractions,&lt;/em> or simplifications, of the &quot;system&quot; in order to&#xD;
    focus on and better understand the important characteristics by leaving irrelevant details aside. The&#xD;
    important&amp;nbsp;characteristics are those that assist in understanding:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Migration&lt;/strong> - how do we get from the current state to the future state as&amp;nbsp;defined by the IT&#xD;
        architecture;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Patterns and Reuse&lt;/strong> - identification of architecture/design patterns and possible reuse;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Non-functional Requirements&lt;/strong> -&amp;nbsp; understanding qualities, such as performance, volumes,&#xD;
        security, availability, portability, and safety;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Partitioning of the Model&lt;/strong> - related to the first point, how can we partition the IT system to aid&#xD;
        in migration, management, and implementation;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Architectural Decisions&lt;/strong> - the key objective of IT architecture is to make decisions;&amp;nbsp;required&#xD;
        decisions are discovered and best made with the help of well define architectural views;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Context&lt;/strong> - related to partitioning, placing tasks, processes and&amp;nbsp;related systems into&amp;nbsp;its&#xD;
        larger context aids in better understanding&amp;nbsp;the system and the constraints placed upon it by this context.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Also see: &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/concepts/uam_complex_modelling_A4EC9E37.html&quot;&#xD;
    guid=&quot;_PjkWoObaEdyjVoHXO3Mbfg&quot;>Concept: Complex IT Architectures&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a>Architectural Patterns&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Architectural patterns are ready-made structures or solutions that solve recurring architectural problems. An&#xD;
    &lt;b>architectural framework&lt;/b> or an &lt;b>architectural infrastructure&lt;/b> (middleware) is a set of components on which&#xD;
    you can build a certain kind of architecture. Many architectural patterns exist that provide a structure for particular&#xD;
    aspects of the enterprise architecture. See: &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../UAM/customcategories/uam_arch_patterns_4A176C92.html&quot; guid=&quot;_scgugKpBEeSFIOC-Wm7nrA&quot;>Architectural&#xD;
    Patterns&lt;/a>. A number of architectural frameworks currently exist:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/termdefinitions/uam_client-server_C59B8CD3.html&quot;&#xD;
        guid=&quot;_6j_AcEGmEeOfR_FtRm9PUg&quot;>Client-Server&lt;/a>;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/termdefinitions/uam_cloud_comp_848CD327.html&quot;&#xD;
        guid=&quot;_HU8xgEGnEeOfR_FtRm9PUg&quot;>Cloud Computing&lt;/a>;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_distributed_FEAB9C15.html&quot;&#xD;
        guid=&quot;_javDAIZeEeWxS8WE0a4vpg&quot;>Distributed Computing Pattern&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/reusableassets/uam_pattern_IT-security_204F8FB4.html&quot;&#xD;
        guid=&quot;_Z4fMMKmdEeSFIOC-Wm7nrA&quot;>IT Security Reference Model&lt;/a>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/termdefinitions/uam_multitier_EFB3BF9A.html&quot;&#xD;
        guid=&quot;_U75A8EGqEeOfR_FtRm9PUg&quot;>Multitier Architecture&lt;/a>;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/termdefinitions/uam_soa_4D4B369B.html&quot;&#xD;
        guid=&quot;_cINoQEGrEeOfR_FtRm9PUg&quot;>Service-oriented Architecture&lt;/a>;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/termdefinitions/uam_peer-peer_2CFE67D5.html&quot;&#xD;
        guid=&quot;_4op_YEGqEeOfR_FtRm9PUg&quot;>Peer-to-Peer Architecture&lt;/a>.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    Architectural Perspective Languages&amp;nbsp;&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    UAM IT architecture viewpoints (and in fact each perspective) has a &lt;em>viewpoint language&lt;/em> specified, which&#xD;
    defines the generic modeling elements allowed (the metamodel) to be used for modeling the viewpoint. The result is&#xD;
    better uniformity of created views, which are easier to&amp;nbsp;develop and easier to understand.&amp;nbsp;The defined UAM&#xD;
    perspective languages and associated viewpoint languages&amp;nbsp;both help in improving the integrity and&#xD;
    understandability of the defined IT architectures.&amp;nbsp;See: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/supportingmaterials/uam_perspective_languages_860241C7.html&quot;&#xD;
    guid=&quot;_mHp1MEJhEeOfR_FtRm9PUg&quot;>Supporting Material: UAM Perspective Languages&lt;/a>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a>The Architecting Process&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    A UAM IT architecture is&amp;nbsp;one of the outcomes of the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../UAM/capabilitypatterns/uam_it_architecture_cap-patt_17CA5978.html&quot; guid=&quot;_3-TfAcCZEdyMpOiGFnM_WA&quot;>IT&#xD;
    Architecture Processes&lt;/a>&amp;nbsp;workflow. As the architecture effort follows this workflow, iteration after iteration,&#xD;
    the&amp;nbsp;IT architecture&amp;nbsp; is defined and revised until it is completed. Each iteration, for each perspective or&#xD;
    viewpoint,&amp;nbsp;includes an assessment and a review milestone, resulting in a robust and well understood architecture.&#xD;
&lt;/p>&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
