<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-p0bpMGEE2MWkWo81kIRXtQ" name="uam_levels_and_views,_W4UEAMqpEdy25fQyv59CjQ" guid="-p0bpMGEE2MWkWo81kIRXtQ" changeDate="2015-02-24T09:36:27.778-0500" version="2.0.0">
  <mainDescription>&lt;a id=&quot;XE_Perspectives__Levels_and_Views&quot; name=&quot;XE_Perspectives__Levels_and_Views&quot;>&lt;/a>&lt;a id=&quot;XE_Levels_and_Views&quot;&#xD;
name=&quot;XE_Levels_and_Views&quot;>&lt;/a> &#xD;
&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Much has been written about the decomposing of&amp;nbsp;architectures and designs into components or subsystems. This&#xD;
    partitioning is done for several reasons: to group cohesive components into a system or to hide or otherwise deal with&#xD;
    complexity when architecting a complex system. In the IT architecture context, complexity needs to be hidden, while at&#xD;
    the same time permitting the detail to be documented. Therefore partitioning and layering is a very useful approach for&#xD;
    dealing with complexity when developing IT architectures.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The following outlines a set modeling concepts and approaches that hide complexity, permitting better understanding of&#xD;
    resulting models, but also having the ability to drill down into as much detail as needed.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Partitions and Layers&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The following definitions from the UAM glossary&amp;nbsp;contrast the notions of layers and partitions.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Layer&#xD;
&lt;/h5>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        The grouping of IT architecture elements in a model at the same level of abstraction and detail;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Conversely, the organization of modeling elements at the same level of abstraction. A layer is a horizontal slice&#xD;
        through&amp;nbsp;the architecture,&amp;nbsp;but a partition is a vertical slice through the architecture.&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;h5>&#xD;
    Partition&#xD;
&lt;/h5>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        A portion of an IT architecture, or&amp;nbsp;sub-element thereof, organized&amp;nbsp;according to some criteria (e.g.&#xD;
        responsible organization or function). Example in UAM is &quot;swimlanes&quot; in an activity or a UAM &lt;em>aspect&lt;/em> (e.g.&#xD;
        Location).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        A set of elements that define a common&amp;nbsp;vertical slice through an IT architecture (e.g., an &lt;em>aspect&lt;/em> of&#xD;
        the architecture such as &quot;Data&quot; or &quot;Activity&quot;), whereas a layer represents a horizontal slice (e.g., a&#xD;
        &lt;em>perspective&lt;/em> of the architecture such as &quot;Business&quot; or &quot;Technical&quot;).&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ol>&#xD;
&lt;p>&#xD;
    Therefore in the context of the UAM, &lt;em>layer&lt;/em> and &lt;em>partition&lt;/em> are, at the highest level,&amp;nbsp;equated to&#xD;
    &lt;em>&lt;strong>Perspective&lt;/strong>&lt;/em> and &lt;em>&lt;strong>Aspect&lt;/strong>&lt;/em> respectively, as illustrated in the Figure 1&#xD;
    below.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp;&lt;img alt=&quot;UAM Framework showing the 12 Viewpoints&quot; src=&quot;./resources/UAM-FW_Bus_Log_Tech.png&quot; />&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;1 - The UAM Perspectives and Viewpoints&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    However, there is also partitioning and layering within each of the twelve UAM viewpoints. For example, the use of&#xD;
    swimlanes (i.e., pools and lanes) for partitioning within activities. See: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/guidelines/uam_pools-lanes_1ACDD6BC.html&quot; guid=&quot;_2je-sKMTEeScBuKTf-rcGA&quot;>Guideline: Pool&#xD;
    and Lane Usage&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Layering is also used to deal with complexity; hierarchies of elements. Simple high-level&amp;nbsp;models can be drilled&#xD;
    down to another layer that is mode detailed (less abstract).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The viewpoints defined start at the business level (Business Perspective) and get more technical and closer to&#xD;
    implementation levels of detail as one works down to the Technology Perspective. The aspects as defined, on the other&#xD;
    hand, are vertical slices through the architecture, each one focused on a particular aspect of the&#xD;
    IT&amp;nbsp;architecture.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Another way of looking at the viewpoints is shown below. Each level (perspective) has different concerns and&#xD;
    motivations, but they are related in that the Business Perspective drives the Logical Perspective which in turn drives&#xD;
    the development of the Technical Perspective. Similarly the decisions and compromises made at lower (more technical&#xD;
    layers) need to be reflected back into high level perspectives, which will be updated&amp;nbsp;if necessary.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;UAM Perspectives and their Relationships&quot; src=&quot;./resources/UAM_FW_Perspectives.png&quot; width=&quot;580&quot;&#xD;
    height=&quot;246&quot; />&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;strong>Figure&amp;nbsp;2 -&lt;/strong> &lt;strong>The UAM Perspectives&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    As shown in Figure 1, IT architecture&amp;nbsp;definitions are&amp;nbsp;documented in UAM using three perspectives (layers)&#xD;
    each having four aspects, for a total of twelve viewpoints as follows:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Business Perspective&lt;/strong> (&lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../UAM/guidances/termdefinitions/uam_cim_6E5AE0AF.html&quot; guid=&quot;_g_wUgMI_EeKSedlRPHdUIQ&quot;>Computation&#xD;
        Independent Model&lt;/a>) &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Business Entities Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Business Process Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Business Locations Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Business Roles Model&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical Perspective&lt;/strong> (&lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../UAM/guidances/termdefinitions/uam_pim_31A8342F.html&quot;&#xD;
        guid=&quot;_1WkcoMI_EeKSedlRPHdUIQ&quot;>Platform-Independent Model&lt;/a>) &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Logical Entities Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Logical Process Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Logical Locations Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Logical Roles Model&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Technology Perspective&lt;/strong> (&lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../UAM/guidances/termdefinitions/uam_psm_FE39A238.html&quot;&#xD;
        guid=&quot;_yigZkMI_EeKSedlRPHdUIQ&quot;>Platform-Specific Model&lt;/a>) &#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                Physical Entities Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Physical Process Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Physical Locations Model&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Physical Roles Model&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When developing an enterprise architecture, each of these four views is created.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Strict Partition&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    A strict partition is a partition where all services/tasks within the partition are accessed by clients/services&#xD;
    outside the partition through service gateways. This implies that the partition has its own set of interfaces and as&#xD;
    such it may be seen as a logical higher-level service provider. This is particularly useful for partitions that&#xD;
    represent either business application boundaries or business process boundaries. It also allows for the interfaces it&#xD;
    exposes to the rest of the business to be secured, isolating services internal to the strict partition from external&#xD;
    access. This is a key concept for the security reference model defined in: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/whitepapers/uam_security_reference_model_3EA07B63.html&quot;&#xD;
    guid=&quot;_KGs_oMX8EdyDYN2-y9-AqA&quot;>Whitepaper: A Reference Model for Enterprise Security&lt;/a>&amp;nbsp;and is extremely useful&#xD;
    when applied to IT architecture.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Maintenance&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Typically all perspectives are created top-down, starting with the Business level, then the Logical and Technical&#xD;
    levels are defined. Variations of this approach are certainly possible, as required by the objectives of the IT&#xD;
    architecture. This is illustrated in one of the example IT architecture where only the Technical level locations models&#xD;
    are defined. See: &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/customcategories/eg_bls_tp_72C57BF1.html&quot;&#xD;
    guid=&quot;_dMco4MJpEeKSedlRPHdUIQ&quot;>IT Research Network TLM&lt;/a>. This architecture is leveraged from existing architectures.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A complete Business Perspective is required, at some level of detail (context), since IT architects and business&#xD;
    managers need to understand this model in order to make informed decisions regarding strategies, plans and evolution.&#xD;
    The Logical level may not be required, if the business, and to some extent the technologies used, do not change&#xD;
    drastically. The Logical level is where the major (structural) decision are made, generally based upon the business&#xD;
    processes in combination with the technologies chosen to support them.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Often manual tasks are not carried forward to the Technical level of the IT architecture. However, UAM recommends that&#xD;
    they are retained in order to provide a more complete picture of the business. In some future iteration of the system,&#xD;
    these manual tasks may be automated or integrated with the IT systems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Existing system architectures are created at the Technical level. They are defined bottom-up since existing&#xD;
    documentation is used, which defines the system at this level; typically the as-built level.&#xD;
&lt;/p>For an overview of the UAM and models see: &lt;a class=&quot;elementLink&quot;&#xD;
href=&quot;./../../../UAM/guidances/supportingmaterials/uam_overview_B2102583.html&quot; guid=&quot;_W0ahoM9uEdymj4NXv8-FYA&quot;>UAM&#xD;
Overview&lt;/a> and &lt;a class=&quot;elementLink&quot; href=&quot;./../../../UAM/guidances/supportingmaterials/uam_welcome_5C65E9E8.html&quot;&#xD;
guid=&quot;_3FfFUMuJEdyPdbXGe2katw&quot;>UAM Home&lt;/a>.</mainDescription>
</org.eclipse.epf.uma:ContentDescription>
