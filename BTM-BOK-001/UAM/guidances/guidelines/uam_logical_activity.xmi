<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-v4aZ1VM_cqRWOPwn167Udg" name="uam_logical_activity,_7IOQYOxWEdytvcf-4U2D3Q" guid="-v4aZ1VM_cqRWOPwn167Udg" authors="DW Enstrom" changeDate="2015-02-11T11:28:58.059-0500" changeDescription="new" version="1.0.0">
  <mainDescription>&lt;h3>&#xD;
    Introduction&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Unified Architecture Method (UAM) uses the concepts and terminology as defined by the OMG's Business Process&#xD;
    Modeling Notation definition to describe business activities, processes and tasks. See: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/whitepapers/uam_bpmn_standards_84B155CD.html&quot; guid=&quot;_JqlCMOAEEdynr9jlfK-aMA&quot;>Whitepaper:&#xD;
    BPMN - the standard&lt;/a>&amp;nbsp;and&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/whitepapers/uam_bpmn_intro_tutorial_426154F6.html&quot;&#xD;
    guid=&quot;_gYTbgN2MEdyVUKFKTmaZUA&quot;>Whitepaper: BPMN - an Introductory Tutorial&lt;/a>. BPMN defines business activities as&#xD;
    work to be performed as part of a business process. Activities in turn represent either a Task (an atomic activity) or&#xD;
    a Sub-Process (a compound activity).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The processes in a business are therefore defined as a number of connected different business activities, each of which&#xD;
    represents a specific task or sub-process in the business. An activity defines what happens within the business when an&#xD;
    event starts it up; it describes a sequence of actions (Tasks and Sub-Processes) that produces a valuable result&#xD;
    for&amp;nbsp;the business.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &amp;nbsp; &lt;img alt='Logical Process Model showing multiple activities that provide the &quot;check-in&quot; service'&#xD;
    src=&quot;./resources/Logical-Perspective_LPM-Airport-Checkin.png&quot; width=&quot;520&quot; height=&quot;551&quot; />&#xD;
&lt;/p>&#xD;
&lt;p class=&quot;picturetext&quot; align=&quot;center&quot;>&#xD;
    &lt;strong>Figure 1 - Activity details&amp;nbsp;for &quot;check-in&quot;.&lt;/strong>&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    From an individual actor's perspective, a logical activity defines the complete workflow that produces the desired&#xD;
    results. This is similar to what is generally called a &quot;business process&quot;, but a &quot;logical activity&quot; in the context of&#xD;
    the UAM&amp;nbsp;has a much more precise definition.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The definition of the logical activity concept, as do all of the models defined within the UAM,&amp;nbsp;differentiates&#xD;
    between &lt;em>instances&lt;/em> and &lt;em>classes&lt;/em>. This, and other important concepts, which aid in understanding and&#xD;
    identifying business activities are:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical Activity &lt;em>instance&lt;/em>&lt;/strong> - one may describe a &lt;em>specific&lt;/em> process; that is, an&#xD;
        instance that has a very precise workflow. In reality, there are a great number of possible processes for any given&#xD;
        business activity, many of them very similar with the main differences being conditional aspects for the workflow&#xD;
        (for example, the type of product that the customer would like to purchase). These instances are analyzed and the&#xD;
        Logical Activity class is updated as required—they are not necessarily part of the IT architecture definition, just&#xD;
        a transient element.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Logical Activity &lt;em>class&lt;/em>&lt;/strong> - to make the logical activity model more comprehensible, similar&#xD;
        processes are grouped together&amp;nbsp;into a logical activity &lt;em>class&lt;/em>. Thus a logical activity class will&#xD;
        define decision points and alternative flows; which path is taken will depend on the state of the business, logical&#xD;
        events,&amp;nbsp;and input from the logical actor.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Actors and Roles&lt;/strong>&amp;nbsp;- The actor is probably the real key to finding the correct logical&#xD;
        activities. Starting with individual actors—or really instances of actors—helps&amp;nbsp;in defining logical&#xD;
        activities. At the enterprise level, the logical actors and activities are going to be, initially, covering a large&#xD;
        portion of the business through abstraction. This layering is the only way to deal with this complexity. See: &lt;a&#xD;
        class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/guidelines/uam_logical_role_A100F4F1.html&quot;&#xD;
        guid=&quot;_f5YuQOxbEdytvcf-4U2D3Q&quot;>Guideline: Logical Actors and Roles&lt;/a>.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>A result of observable value&lt;/strong> - helps in determining the correct extent of an activity, which&#xD;
        should be neither too small nor too big (but this is hard to avoid at the enterprise level). Requiring that the&#xD;
        business activity give a result of observable value, that is, both perceived and measurable, helps&amp;nbsp;in finding&#xD;
        a complete flow, and in avoiding business activities that are too small (i.e. a single Task is likely not a&#xD;
        complete business activity).&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>In a business&lt;/strong> - The words &quot;in a business&quot;, means both that the business provides the business&#xD;
        activity to the actor, and that the business&amp;nbsp;activity only covers what is actually done within the business.&#xD;
        Supporting work done elsewhere is not included.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Action&lt;/strong> - The actions are invoked either on request from an actor to the business, or through some&#xD;
        other business event. Actions include internal tasks and decisions, as well as requests to either the invoked actor&#xD;
        or other actors.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Logical activities specify the interactions between the subject system and its actors, &lt;em>and the effect that they&#xD;
    have on the system&lt;/em>—the performance of a logical activity may change the state of the system (and thus may change&#xD;
    the way the it responds to future events or interactions), and the activities must specify and capture these state&#xD;
    changes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A services view of the system is also possible, since what the system directly and explicitly provides to its&#xD;
    environment are &lt;em>services&lt;/em>, and the interaction between the actor and the system, as described in the logical&#xD;
    activity, will take place through the invocation of one or more of those services.&amp;nbsp;The collected set of Logical&#xD;
    Activities constitutes all the possible ways of using the system and how they are supported at a logical&#xD;
    level,&amp;nbsp;and all the possible actions (events) and actors that the system deals with. See: &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/guidelines/uam_logical_process_model_38D5D114.html&quot;&#xD;
    guid=&quot;_Cr8VIOyGEdykP9GoXvwZVg&quot;>Guideline: Logical Process Model&lt;/a>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Classes and Instances of Logical Activities&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    As a system operates, an almost unlimited number of separate workflows could be found. An activity &lt;em>instance&lt;/em> is&#xD;
    simply a specific process, or scenario. It corresponds to the work that a number of collaborating business members&#xD;
    perform in their roles defined in the model, and not to any particular business member or any role that the member is&#xD;
    playing.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A logical activity &lt;em>class&lt;/em> is what you normally work with to make the model understandable, and to avoid&#xD;
    drowning in detail. It represents the union of a number of business process instances with workflows that are similar,&#xD;
    but normally not identical. Typically, an employee who is competent to act in a certain role will do this in instances&#xD;
    of several different activities.&#xD;
&lt;/p>&#xD;
&lt;h5>&#xD;
    Example:&#xD;
&lt;/h5>&#xD;
&lt;p class=&quot;example&quot;>&#xD;
    At the airport check-in counter, the two activities, &lt;em>Individual Check-in&lt;/em> and &lt;em>Group Check-in&lt;/em> both&#xD;
    require the same competencies from the employee at the check-in counter, as well as access to the same information&#xD;
    about a certain departure. Thus, both activities can and should be designed using the same &lt;em>Check-in&lt;/em> activity.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The name of the logical activity should express what happens when an instance of the activity is performed. The form of&#xD;
    the name should therefore be active, typically described by the gerund form of the verb (Checking-in) or a verb and a&#xD;
    noun together.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The names can either describe the tasks in the logical activity, for instance &lt;em>placing an order&lt;/em>. Although a&#xD;
    logical activity describes what happens within the system, it is often most natural (and recommended) &amp;nbsp;to name the&#xD;
    activity from its primary actor's point of view.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Goals&quot; name=&quot;Goals&quot;>Goals&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The goal of a logical activity should be specified from at least two perspectives:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        For the actors the process interacts with, specify the value those actors expect from the business (expected&#xD;
        result).&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        From the perspective of the organization performing the process, define what the objectives are of having this&#xD;
        process in place and what you hope to achieve by performing it (business goals).&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Performance Goals&quot; name=&quot;Performance Goals&quot;>Performance Goals&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Some common non-functional metrics categories are:&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Time&lt;/strong> - an approximation of the time it should take to execute the workflow, or part of the&#xD;
        workflow.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Cost&lt;/strong> - an approximation of the cost of executing the workflow, or part of the workflow.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Quality&lt;/strong> - for example, &quot;no more than 2% of products should be defective when they come off the&#xD;
        production line&quot;.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    A major challenge is to understand what scenarios (logical activity instances) are relevant to measure. Criteria to use&#xD;
    are frequency of the scenario, or business relevance of the scenario. If you can determine that a particular part of&#xD;
    the workflow has importance, you may save yourself some effort by only measuring the cost or time of that&#xD;
    subflow.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    &lt;a id=&quot;Workflow - Structure&quot; name=&quot;Workflow - Structure&quot;>Workflow - Structure&lt;/a>&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Most activities may be thought of as several sub-processes, which together yield the total workflow. Sometimes several&#xD;
    logical activities in the business have common sub-processes or tasks, or the same sub-process (or task)&amp;nbsp;appears&#xD;
    in different parts of one activity. If this common behavior has any substantial volume, it should be performed by the&#xD;
    same actors. This is the key value added for the logical process model, deciding upon the structure and relationships&#xD;
    between activities, tasks and process, which are defined as the details of each activity and process are&#xD;
    defined.&amp;nbsp;See: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/guidelines/uam_diagrams_in_logical_pers_FA9238A.html&quot;&#xD;
    guid=&quot;_PxJUAOoZEdytvcf-4U2D3Q&quot;>Guideline: Logical Perspective Views&lt;/a>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Characteristics of a Good Logical Activity&#xD;
&lt;/h3>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            Its name and brief description are clear and easy to understand, even to people outside the modeling team.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            Each activity is complete from an outside (actor's) perspective. For example, the activity &lt;em>Handle&#xD;
            Claim&lt;/em> in an insurance company starts when a customer files a claim. The &lt;em>Handle Claim&lt;/em> activity is&#xD;
            not complete unless it includes a notification about the decision from the insurance company to the customer&#xD;
            and (if appropriate) a compensatory payment.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            Each activity normally is involved with at least one actor. Activities are initiated by actors and business&#xD;
            events, interact with actors to perform the tasks, and deliver results.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It is possible, but unusual, for a supporting activity not to interact with an actor. This is true if an&#xD;
            activity is initiated by an internal event and does not have to interact with an actor to perform its tasks.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It is substantial. Remember, a concrete logical activity must be easy to read. Therefore, an abstract activity&#xD;
            should not be too small. If an abstract activity is not substantial, it should be eliminated and its tasks&#xD;
            should be described in the affected concrete activity.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It contains logically related tasks.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It exists for a specific reason. An abstract activity should contain any of three kinds of tasks: those that&#xD;
            are common across several activities; those that are optional; or those that are important enough that you want&#xD;
            to emphasize them in the model.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;div class=&quot;example&quot;>&#xD;
    &lt;h3>&#xD;
        Characteristics of a Good Process Description&#xD;
    &lt;/h3>&#xD;
&lt;/div>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It must be clear and easy to understand, even for people outside the modeling team.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It describes the workflow, not just the purpose of the activity.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It describes only those tasks that are inside the business.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It describes all possible tasks in the activity. For example, what happens if a condition is met, as well as&#xD;
            what happens if it is not.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It does not mention actors who do not communicate with it. If it did mention other actors, it would make the&#xD;
            description difficult to understand and maintain.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It describes only those tasks that belong to it, not what is going on in other activities that work parallel to&#xD;
            it.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It does not mention other activities with which it does not have relationships. If the activity requires that&#xD;
            some results exist in the business before it can start, this should be described as a precondition. The&#xD;
            precondition should not have any references to the activity in which the result was created.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It indicates if the order of any tasks described for the activity is not fixed.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            It is structured so that it is easy to read and understand.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            The description clearly describes the start and end of the workflow.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div class=&quot;example&quot;>&#xD;
            Each extend-relationship is described clearly so that it is obvious how and when to insert the business&#xD;
            activity.&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
