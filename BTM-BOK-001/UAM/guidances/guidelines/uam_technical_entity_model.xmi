<?xml version="1.0" encoding="UTF-8"?>
<org.eclipse.epf.uma:ContentDescription xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:org.eclipse.epf.uma="http://www.eclipse.org/epf/uma/1.0.6/uma.ecore" xmlns:epf="http://www.eclipse.org/epf" epf:version="1.5.1" xmlns:rmc="http://www.ibm.com/rmc" rmc:version="7.5.1" xmi:id="-xv4Dot1Tqqenr9d_MVK1uA" name="uam_technical_entity_model,_N9bYMOV6EdyjVoHXO3Mbfg" guid="-xv4Dot1Tqqenr9d_MVK1uA" authors="DW Enstrom" changeDate="2015-11-30T17:07:39.151-0500" changeDescription="new" version="1.0.0">
  <mainDescription>&lt;h3>&#xD;
    Overview&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    In the Unified Architecture Method (UAM), &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../../UAM/workproducts/uam_technical_entity_model_B1267900.html&quot; guid=&quot;_MhRawM6mEdymj4NXv8-FYA&quot;>Technical&#xD;
    Entity Model&lt;/a>s are are used to analyze the structure of the persistent entities used by the system.&amp;nbsp;&amp;nbsp;At&#xD;
    this level of modeling we are not concerned with the design of tables in the database, the physical storage of the&#xD;
    database, nor the constructs for modeling referential integrity (constraints and triggers) and stored procedures. The&#xD;
    model is defined at the logical level, therefore candidate keys and other constructs may be defined if&#xD;
    desired.&amp;nbsp;These models are also used to define the &quot;owner&quot; of the entity and activities that are users of&#xD;
    (subscribers to) the entity.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Technical Entity&amp;nbsp;Models&amp;nbsp;are constructed at&amp;nbsp;any level within the enterprise. Enterprise and departmental&#xD;
    level models are used to provide standard definitions for key entities (such as customer and employee) that are used by&#xD;
    all activities or systems&amp;nbsp;in&amp;nbsp;the enterprise or a business department.&amp;nbsp;These models are also used to&#xD;
    define the &quot;owner&quot; of the entity and activities that are users of (subscribers to) the entity. At this technical level&#xD;
    specific technical solutions are defined, or IT standards (i.e., Oracle, Sybase, etc.)&amp;nbsp;if working at the&#xD;
    enterprise and or departmental level.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This guideline describes the model elements used to construct a Technical Entity Model for the &quot;system&quot;. Note that the&#xD;
    data modeling representations contained in this guideline are based on the UML 2.0.&#xD;
&lt;/p>&#xD;
&lt;blockquote>&#xD;
    &lt;p>&#xD;
        &lt;strong>&lt;u>Note&lt;/u>:&lt;/strong> Since UAM may model the complete enterprise (or business domain), the level of detail&#xD;
        to be included in this model is a judgment call of the architect, based upon:&amp;nbsp;&amp;nbsp;&#xD;
    &lt;/p>&#xD;
&lt;/blockquote>&#xD;
&lt;blockquote>&#xD;
    &lt;div style=&quot;MARGIN-LEFT: 2em&quot;>&#xD;
        &lt;ul>&#xD;
            &lt;li>&#xD;
                The objective of the architecture effort&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                The size of the enterprise or (business line)&#xD;
            &lt;/li>&#xD;
            &lt;li>&#xD;
                Time and resource constraints&#xD;
            &lt;/li>&#xD;
        &lt;/ul>&#xD;
    &lt;/div>&#xD;
&lt;/blockquote>&#xD;
&lt;h3>&#xD;
    Stages of Entity Modeling&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    There are three general stages in the development of&amp;nbsp;entity (data) models, which correspond to UAM levels:&#xD;
    conceptual (i.e., Business level), logical (i.e., Logical level),&amp;nbsp;and physical (i.e., Technical level),&#xD;
    see:&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/guidances/concepts/uam_data-modelling_1E62451A.html&quot;&#xD;
    guid=&quot;_cSLisPveEeOyDIZvZjuaLg&quot;>Concept: Data Modeling&lt;/a>.&amp;nbsp;These stages of (data) modeling reflect the different&#xD;
    views (and levels of detail) in the Unified Architecture Method (UAM), see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/concepts/uam_levels_and_views_499BC4B8.html&quot; guid=&quot;_W4UEAMqpEdy25fQyv59CjQ&quot;>Concept:&#xD;
    Architecture Perspectives and Viewpoints&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A definition of&amp;nbsp;physical data modeling is provided in&amp;nbsp;&lt;a&#xD;
    href=&quot;http://en.wikipedia.org/wiki/Physical_data_model&quot; target=&quot;_blank&quot;>Wikipedia: Physical Data Model&lt;/a> and a brief&#xD;
    introduction to how to do it is provided in &lt;a href=&quot;http://www.agilemodeling.com/artifacts/physicalDataModel.htm&quot;&#xD;
    target=&quot;_blank&quot;>Agile Modeling: Physical Data Model&lt;/a>.&amp;nbsp;A summary of technical data modeling (i.e., the&#xD;
    Technology View) is provided below, but also see: &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/guidelines/uam_business_entity_model_EC888749.html&quot;&#xD;
    guid=&quot;_MYViYOS5EdyYxtlRIMoTnw&quot;>Guideline: Business Entity Model&lt;/a>&amp;nbsp;and &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../../UAM/guidances/guidelines/uam_technical_entity_model_DF2D1DF6.html&quot;&#xD;
    guid=&quot;_N9bYMOV6EdyjVoHXO3Mbfg&quot;>Guideline: Technical Entity Model&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Technical&amp;nbsp;Entity Model&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Technical Entity Model is the final stage of development of the data aspect for the system.&amp;nbsp;&amp;nbsp;It models&#xD;
    technical choices, namely design patterns and standards that support both the logical view and the business. There may&#xD;
    also be some refinement of the data model due to implementation considerations, but the focus of the Technical Entity&#xD;
    Model, within the IT architecture context, is to either specify technical patterns for the system, or (if the scope,&#xD;
    scale and resources are appropriate) to document the implementation level view. The former is the most likely scenario&#xD;
    for most organizations due to size, resourcing and other considerations.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Key to the technical view is the locations model, which may be used to show how entities (information) and the required&#xD;
    supporting infrastructure are organized and deployed throughout the system.&amp;nbsp;Technical choices, the&#xD;
    system&amp;nbsp;technical standards, and how they are used/deployed are also described. These standards and patterns may be&#xD;
    generic, such as 'relational database' or 'object repository', but they may also be specific in terms of technologies&#xD;
    and where and how to use them, such as 'Oracle 11g' with configuration 'xyz'. These standards may be described in the&#xD;
    Technical&amp;nbsp;Entity Model, however they &lt;em>must&lt;/em> also be documented in Architectural Decisions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A simple Technical Entity Model is shown below, again based upon the airport example. Technical details are added,&#xD;
    along with technology choices, which are described in the documentation for the model.&#xD;
&lt;/p>&#xD;
&lt;p align=&quot;center&quot;>&#xD;
    &lt;img alt=&quot;Technical entity model - simple example&quot; src=&quot;./resources/Technical-Perspective_TEM.png&quot; />&#xD;
&lt;/p>&lt;br />&#xD;
&lt;br />&#xD;
See: &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../UAM/workproducts/uam_technical_entity_model_B1267900.html&quot;&#xD;
guid=&quot;_MhRawM6mEdymj4NXv8-FYA&quot;>Artifact: Technical Entity Model&lt;/a>.&lt;br />&#xD;
&lt;br /></mainDescription>
</org.eclipse.epf.uma:ContentDescription>
